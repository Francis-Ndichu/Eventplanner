{"ast":null,"code":"var _jsxFileName = \"/home/francis/EventPlanner/client/src/Components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport Task from './Task';\nimport TaskContext from './TaskContext';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList({\n  onDrop\n}) {\n  _s();\n  const {\n    tasks,\n    setTasks,\n    sourceSection\n  } = useContext(TaskContext);\n  const {\n    user\n  } = useAuth();\n  const handleDrop = e => {\n    e.preventDefault();\n    try {\n      const droppedTaskData = e.dataTransfer.getData('task');\n      if (!droppedTaskData) {\n        // Handle empty data\n        console.error(\"Error: Empty dropped task data.\");\n        return;\n      }\n      const droppedTask = JSON.parse(droppedTaskData);\n      // Proceed with handling the dropped task\n      onDrop(droppedTask);\n    } catch (error) {\n      console.error(\"Error parsing dropped task data:\", error);\n    }\n  };\n  const allowDrop = e => {\n    e.preventDefault();\n  };\n  const moveTask = (dragIndex, hoverIndex, sourceSection, targetSection) => {\n    if (!tasks || !tasks[sourceSection] || !tasks[targetSection]) {\n      console.error(\"Error: Tasks or sections are not defined.\");\n      return;\n    }\n    const updatedSourceTasks = [...tasks[sourceSection]];\n    const updatedTargetTasks = [...tasks[targetSection]];\n    const draggedTask = updatedSourceTasks[dragIndex];\n    updatedSourceTasks.splice(dragIndex, 1);\n    updatedTargetTasks.splice(hoverIndex, 0, draggedTask);\n    setTasks({\n      ...tasks,\n      [sourceSection]: updatedSourceTasks,\n      [targetSection]: updatedTargetTasks\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onDrop: handleDrop,\n    onDragOver: allowDrop,\n    children: tasks[sourceSection] && tasks[sourceSection].map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n      index: index,\n      task: task,\n      moveTask: (dragIndex, hoverIndex) => moveTask(dragIndex, hoverIndex, sourceSection, task.section),\n      sourceSection: sourceSection,\n      isAdmin: user && user.role === 'admin' // Check if user exists before accessing its properties\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"W/MmY44bC4SORR+OVK8jkLKxzUs=\", false, function () {\n  return [useAuth];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useContext","Task","TaskContext","useAuth","jsxDEV","_jsxDEV","TaskList","onDrop","_s","tasks","setTasks","sourceSection","user","handleDrop","e","preventDefault","droppedTaskData","dataTransfer","getData","console","error","droppedTask","JSON","parse","allowDrop","moveTask","dragIndex","hoverIndex","targetSection","updatedSourceTasks","updatedTargetTasks","draggedTask","splice","onDragOver","children","map","task","index","section","isAdmin","role","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/francis/EventPlanner/client/src/Components/TaskList.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport Task from './Task';\nimport TaskContext from './TaskContext';\nimport { useAuth } from './AuthContext';\n\nfunction TaskList({ onDrop }) {\n  const { tasks, setTasks, sourceSection } = useContext(TaskContext);\n  const { user } = useAuth();\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n    \n    try {\n      const droppedTaskData = e.dataTransfer.getData('task');\n      if (!droppedTaskData) {\n        // Handle empty data\n        console.error(\"Error: Empty dropped task data.\");\n        return;\n      }\n  \n      const droppedTask = JSON.parse(droppedTaskData);\n      // Proceed with handling the dropped task\n      onDrop(droppedTask);\n    } catch (error) {\n      console.error(\"Error parsing dropped task data:\", error);\n    }\n  };\n  \n  const allowDrop = (e) => {\n    e.preventDefault();\n  };\n\n  const moveTask = (dragIndex, hoverIndex, sourceSection, targetSection) => {\n    if (!tasks || !tasks[sourceSection] || !tasks[targetSection]) {\n      console.error(\"Error: Tasks or sections are not defined.\");\n      return;\n    }\n  \n    const updatedSourceTasks = [...tasks[sourceSection]];\n    const updatedTargetTasks = [...tasks[targetSection]];\n  \n    const draggedTask = updatedSourceTasks[dragIndex];\n  \n    updatedSourceTasks.splice(dragIndex, 1);\n    updatedTargetTasks.splice(hoverIndex, 0, draggedTask);\n  \n    setTasks({\n      ...tasks,\n      [sourceSection]: updatedSourceTasks,\n      [targetSection]: updatedTargetTasks\n    });\n  };\n\n  return (\n    <div onDrop={handleDrop} onDragOver={allowDrop}>\n      {tasks[sourceSection] && tasks[sourceSection].map((task, index) => (\n        <Task\n          key={task.id}\n          index={index}\n          task={task}\n          moveTask={(dragIndex, hoverIndex) => moveTask(dragIndex, hoverIndex, sourceSection, task.section)}\n          sourceSection={sourceSection}\n          isAdmin={user && user.role === 'admin'} // Check if user exists before accessing its properties\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default TaskList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
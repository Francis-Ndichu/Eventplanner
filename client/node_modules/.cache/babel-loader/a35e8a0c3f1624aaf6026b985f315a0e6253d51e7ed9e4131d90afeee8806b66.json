{"ast":null,"code":"var _jsxFileName = \"/home/francis/EventPlanner/client/src/Components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport EventCard from './EventCard';\nimport TaskList from './TaskList';\nimport { v4 as uuidv4 } from 'uuid'; // Import uuid\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [columns, setColumns] = useState({\n    todo: {\n      id: uuidv4(),\n      // Assign unique IDs to each column using uuid\n      title: 'ToDo',\n      items: [{\n        id: 'task1',\n        title: 'Task 1'\n      }]\n    },\n    inProgress: {\n      id: uuidv4(),\n      // Assign unique IDs to each column using uuid\n      title: 'InProgress',\n      items: []\n    },\n    completed: {\n      id: uuidv4(),\n      // Assign unique IDs to each column using uuid\n      title: 'Completed',\n      items: []\n    },\n    delayed: {\n      id: uuidv4(),\n      // Assign unique IDs to each column using uuid\n      title: 'Delayed',\n      items: []\n    }\n  });\n  const onDragEnd = result => {\n    // Drag and drop logic\n    const {\n      destination,\n      source,\n      draggableId\n    } = result;\n\n    // If no destination, or if destination is same as source, exit\n    if (!destination || destination.droppableId === source.droppableId) {\n      return;\n    }\n\n    // Find the source and destination columns\n    const sourceColumn = columns[source.droppableId];\n    const destinationColumn = columns[destination.droppableId];\n\n    // Find the task being dragged\n    const task = sourceColumn.items.find(item => item.id === draggableId);\n\n    // Remove the task from the source column\n    const newSourceItems = Array.from(sourceColumn.items);\n    newSourceItems.splice(source.index, 1);\n\n    // Add the task to the destination column\n    const newDestinationItems = Array.from(destinationColumn.items);\n    newDestinationItems.splice(destination.index, 0, task);\n\n    // Update the state with new column items\n    setColumns(prevColumns => ({\n      ...prevColumns,\n      [source.droppableId]: {\n        ...sourceColumn,\n        items: newSourceItems\n      },\n      [destination.droppableId]: {\n        ...destinationColumn,\n        items: newDestinationItems\n      }\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Upcoming Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EventCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"main-content\",\n          style: {\n            height: \"fit-content\",\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Main Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This is the main content area of the dashboard.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          children: Object.values(columns).map(column => /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: column.id,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              style: {\n                backgroundColor: 'lightgrey',\n                flex: '1',\n                margin: '8px',\n                minHeight: '200px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"column\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"column-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: column.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 25\n                  }, this), column.items.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: item.id,\n                    index: index,\n                    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      children: /*#__PURE__*/_jsxDEV(TaskList, {\n                        task: item,\n                        droppableId: column.id\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 109,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 31\n                    }, this)\n                  }, item.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 27\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this)\n          }, column.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"ACSsCM4mzqamTDHqNzEEWd6d2pI=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","EventCard","TaskList","v4","uuidv4","jsxDEV","_jsxDEV","Dashboard","_s","columns","setColumns","todo","id","title","items","inProgress","completed","delayed","onDragEnd","result","destination","source","draggableId","droppableId","sourceColumn","destinationColumn","task","find","item","newSourceItems","Array","from","splice","index","newDestinationItems","prevColumns","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","height","width","display","Object","values","map","column","provided","ref","innerRef","droppableProps","backgroundColor","flex","margin","minHeight","draggableProps","dragHandleProps","placeholder","_c","$RefreshReg$"],"sources":["/home/francis/EventPlanner/client/src/Components/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport EventCard from './EventCard';\nimport TaskList from './TaskList';\nimport { v4 as uuidv4 } from 'uuid'; // Import uuid\n\nconst Dashboard = () => {\n  const [columns, setColumns] = useState({\n    todo: {\n      id: uuidv4(), // Assign unique IDs to each column using uuid\n      title: 'ToDo',\n      items: [\n        { id: 'task1', title: 'Task 1' }\n      ]\n    },\n    inProgress: {\n      id: uuidv4(), // Assign unique IDs to each column using uuid\n      title: 'InProgress',\n      items: []\n    },\n    completed: {\n      id: uuidv4(), // Assign unique IDs to each column using uuid\n      title: 'Completed',\n      items: []\n    },\n    delayed: {\n      id: uuidv4(), // Assign unique IDs to each column using uuid\n      title: 'Delayed',\n      items: []\n    }\n  });\n\n  const onDragEnd = result => {\n    // Drag and drop logic\n    const { destination, source, draggableId } = result;\n\n    // If no destination, or if destination is same as source, exit\n    if (!destination || destination.droppableId === source.droppableId) {\n      return;\n    }\n\n    // Find the source and destination columns\n    const sourceColumn = columns[source.droppableId];\n    const destinationColumn = columns[destination.droppableId];\n\n    // Find the task being dragged\n    const task = sourceColumn.items.find(item => item.id === draggableId);\n\n    // Remove the task from the source column\n    const newSourceItems = Array.from(sourceColumn.items);\n    newSourceItems.splice(source.index, 1);\n\n    // Add the task to the destination column\n    const newDestinationItems = Array.from(destinationColumn.items);\n    newDestinationItems.splice(destination.index, 0, task);\n\n    // Update the state with new column items\n    setColumns(prevColumns => ({\n      ...prevColumns,\n      [source.droppableId]: {\n        ...sourceColumn,\n        items: newSourceItems,\n      },\n      [destination.droppableId]: {\n        ...destinationColumn,\n        items: newDestinationItems,\n      },\n    }));\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"dashboard\">\n        <aside className=\"sidebar\">\n          <h2>Upcoming Events</h2>\n          <EventCard />\n        </aside>\n        <div className=\"main-section\">\n          <main className=\"main-content\" style={{ height: \"fit-content\", width: \"100%\" }}>\n            <h1>Main Content</h1>\n            <p>This is the main content area of the dashboard.</p>\n          </main>\n          <div style={{ display: 'flex' }}>\n            {Object.values(columns).map(column => (\n              <Droppable droppableId={column.id} key={column.id}>\n                {(provided) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                    style={{\n                      backgroundColor: 'lightgrey',\n                      flex: '1',\n                      margin: '8px',\n                      minHeight: '200px'\n                    }}\n                  >\n                    <div className=\"column\">\n                      <div className=\"column-section\">\n                        <h2>{column.title}</h2>\n                        {/* Render tasks without updating state here */}\n                        {column.items.map((item, index) => (\n                          <Draggable key={item.id} draggableId={item.id} index={index}>\n                            {(provided) => (\n                              <div\n                                ref={provided.innerRef}\n                                {...provided.draggableProps}\n                                {...provided.dragHandleProps}\n                              >\n                                <TaskList task={item} droppableId={column.id} />\n                              </div>\n                            )}\n                          </Draggable>\n                        ))}\n                        {provided.placeholder}\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </Droppable>\n            ))}\n          </div>\n        </div>\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/francis/EventPlanner/client/src/Components/TaskList.js\",\n  _s = $RefreshSig$();\n// In TaskList.js\nimport React, { useContext } from 'react';\nimport Task from './Task';\nimport TaskContext from './TaskContext';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList({\n  onDrop\n}) {\n  _s();\n  const {\n    tasks,\n    setTasks,\n    sourceSection,\n    setSourceSection\n  } = useContext(TaskContext);\n  const {\n    user\n  } = useAuth();\n  const userTasks = tasks.filter(task => task.assigned_users.some(assignedUser => assignedUser.id === user.id));\n  const handleDrop = e => {\n    e.preventDefault();\n    try {\n      const droppedTaskData = e.dataTransfer.getData('task');\n      if (!droppedTaskData) {\n        console.error(\"Error: Empty dropped task data.\");\n        return;\n      }\n      const droppedTask = JSON.parse(droppedTaskData);\n      onDrop(droppedTask);\n    } catch (error) {\n      console.error(\"Error parsing dropped task data:\", error);\n    }\n  };\n  const allowDrop = e => {\n    e.preventDefault();\n  };\n  const moveTask = (dragIndex, hoverIndex, sourceSection, targetSection) => {\n    // Ensure source and target sections are valid\n    if (!sourceSection || !targetSection) {\n      console.error(\"Error: Source or target section is not defined or does not exist.\");\n      return;\n    }\n\n    // Get the dragged task\n    const draggedTask = tasks.find(task => task.section === sourceSection)[dragIndex];\n\n    // Find the index of the target task\n    const targetIndex = tasks.findIndex(task => task.section === targetSection);\n\n    // Make a shallow copy of the tasks array\n    const newTasks = [...tasks];\n\n    // Remove the dragged task from the source section\n    const sourceTasks = newTasks.filter(task => task.section === sourceSection);\n    const updatedSourceTasks = sourceTasks.filter((_, index) => index !== dragIndex);\n\n    // Insert the dragged task into the target section at the hover index\n    updatedSourceTasks.splice(hoverIndex, 0, draggedTask);\n\n    // Update the tasks array with the modified source section\n    newTasks.splice(targetIndex, sourceTasks.length, ...updatedSourceTasks);\n\n    // Update the tasks array in state\n    setTasks(newTasks);\n\n    // Handle horizontal movement\n    const direction = dragIndex < hoverIndex ? 'right' : 'left';\n    if (direction === 'right') {\n      console.log('Moving right...');\n    } else {\n      console.log('Moving left...');\n    }\n  };\n  const handleDragStart = (e, task, sourceSection) => {\n    setSourceSection(sourceSection); // Set the source section when dragging starts\n    const taskDataString = JSON.stringify(task);\n    e.dataTransfer.setData('task', taskDataString);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onDrop: handleDrop,\n    onDragOver: allowDrop,\n    children: userTasks.map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n      index: index,\n      task: task,\n      moveTask: (dragIndex, hoverIndex) => moveTask(dragIndex, hoverIndex, task.section),\n      sourceSection: task.section // Pass sourceSection dynamically\n      ,\n      isAdmin: user.role === 'admin',\n      onDragStart: e => handleDragStart(e, task, task.section) // Pass sourceSection when dragging starts\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"nZ5ydns08zwM5AlXCnz6ppXeTJ4=\", false, function () {\n  return [useAuth];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useContext","Task","TaskContext","useAuth","jsxDEV","_jsxDEV","TaskList","onDrop","_s","tasks","setTasks","sourceSection","setSourceSection","user","userTasks","filter","task","assigned_users","some","assignedUser","id","handleDrop","e","preventDefault","droppedTaskData","dataTransfer","getData","console","error","droppedTask","JSON","parse","allowDrop","moveTask","dragIndex","hoverIndex","targetSection","draggedTask","find","section","targetIndex","findIndex","newTasks","sourceTasks","updatedSourceTasks","_","index","splice","length","direction","log","handleDragStart","taskDataString","stringify","setData","onDragOver","children","map","isAdmin","role","onDragStart","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/francis/EventPlanner/client/src/Components/TaskList.js"],"sourcesContent":["// In TaskList.js\nimport React, { useContext } from 'react';\nimport Task from './Task';\nimport TaskContext from './TaskContext';\nimport { useAuth } from './AuthContext';\n\nfunction TaskList({ onDrop }) {\n  const { tasks, setTasks, sourceSection, setSourceSection } = useContext(TaskContext);\n  const { user } = useAuth();\n\n  const userTasks = tasks.filter(task => task.assigned_users.some(assignedUser => assignedUser.id === user.id));\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n    try {\n      const droppedTaskData = e.dataTransfer.getData('task');\n      if (!droppedTaskData) {\n        console.error(\"Error: Empty dropped task data.\");\n        return;\n      }\n      const droppedTask = JSON.parse(droppedTaskData);\n      onDrop(droppedTask);\n    } catch (error) {\n      console.error(\"Error parsing dropped task data:\", error);\n    }\n  };\n\n  const allowDrop = (e) => {\n    e.preventDefault();\n  };\n\n\n  const moveTask = (dragIndex, hoverIndex, sourceSection, targetSection) => {\n    // Ensure source and target sections are valid\n    if (!sourceSection || !targetSection) {\n      console.error(\"Error: Source or target section is not defined or does not exist.\");\n      return;\n    }\n  \n    // Get the dragged task\n    const draggedTask = tasks.find(task => task.section === sourceSection)[dragIndex];\n  \n    // Find the index of the target task\n    const targetIndex = tasks.findIndex(task => task.section === targetSection);\n  \n    // Make a shallow copy of the tasks array\n    const newTasks = [...tasks];\n  \n    // Remove the dragged task from the source section\n    const sourceTasks = newTasks.filter(task => task.section === sourceSection);\n    const updatedSourceTasks = sourceTasks.filter((_, index) => index !== dragIndex);\n  \n    // Insert the dragged task into the target section at the hover index\n    updatedSourceTasks.splice(hoverIndex, 0, draggedTask);\n  \n    // Update the tasks array with the modified source section\n    newTasks.splice(targetIndex, sourceTasks.length, ...updatedSourceTasks);\n  \n    // Update the tasks array in state\n    setTasks(newTasks);\n  \n    // Handle horizontal movement\n    const direction = dragIndex < hoverIndex ? 'right' : 'left';\n    if (direction === 'right') {\n      console.log('Moving right...');\n    } else {\n      console.log('Moving left...');\n    }\n  };\n  \n\n  \n  const handleDragStart = (e, task, sourceSection) => {\n    setSourceSection(sourceSection); // Set the source section when dragging starts\n    const taskDataString = JSON.stringify(task);\n    e.dataTransfer.setData('task', taskDataString);\n  };\n\n  return (\n    <div onDrop={handleDrop} onDragOver={allowDrop}>\n      {userTasks.map((task, index) => (\n        <Task\n          key={task.id}\n          index={index}\n          task={task}\n          moveTask={(dragIndex, hoverIndex) => moveTask(dragIndex, hoverIndex, task.section)} \n          sourceSection={task.section} // Pass sourceSection dynamically\n          isAdmin={user.role === 'admin'}\n          onDragStart={(e) => handleDragStart(e, task, task.section)} // Pass sourceSection when dragging starts\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default TaskList;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC5B,MAAM;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,aAAa;IAAEC;EAAiB,CAAC,GAAGZ,UAAU,CAACE,WAAW,CAAC;EACpF,MAAM;IAAEW;EAAK,CAAC,GAAGV,OAAO,CAAC,CAAC;EAE1B,MAAMW,SAAS,GAAGL,KAAK,CAACM,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,cAAc,CAACC,IAAI,CAACC,YAAY,IAAIA,YAAY,CAACC,EAAE,KAAKP,IAAI,CAACO,EAAE,CAAC,CAAC;EAE7G,MAAMC,UAAU,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,eAAe,GAAGF,CAAC,CAACG,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MACtD,IAAI,CAACF,eAAe,EAAE;QACpBG,OAAO,CAACC,KAAK,CAAC,iCAAiC,CAAC;QAChD;MACF;MACA,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACP,eAAe,CAAC;MAC/CjB,MAAM,CAACsB,WAAW,CAAC;IACrB,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D;EACF,CAAC;EAED,MAAMI,SAAS,GAAIV,CAAC,IAAK;IACvBA,CAAC,CAACC,cAAc,CAAC,CAAC;EACpB,CAAC;EAGD,MAAMU,QAAQ,GAAGA,CAACC,SAAS,EAAEC,UAAU,EAAExB,aAAa,EAAEyB,aAAa,KAAK;IACxE;IACA,IAAI,CAACzB,aAAa,IAAI,CAACyB,aAAa,EAAE;MACpCT,OAAO,CAACC,KAAK,CAAC,mEAAmE,CAAC;MAClF;IACF;;IAEA;IACA,MAAMS,WAAW,GAAG5B,KAAK,CAAC6B,IAAI,CAACtB,IAAI,IAAIA,IAAI,CAACuB,OAAO,KAAK5B,aAAa,CAAC,CAACuB,SAAS,CAAC;;IAEjF;IACA,MAAMM,WAAW,GAAG/B,KAAK,CAACgC,SAAS,CAACzB,IAAI,IAAIA,IAAI,CAACuB,OAAO,KAAKH,aAAa,CAAC;;IAE3E;IACA,MAAMM,QAAQ,GAAG,CAAC,GAAGjC,KAAK,CAAC;;IAE3B;IACA,MAAMkC,WAAW,GAAGD,QAAQ,CAAC3B,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACuB,OAAO,KAAK5B,aAAa,CAAC;IAC3E,MAAMiC,kBAAkB,GAAGD,WAAW,CAAC5B,MAAM,CAAC,CAAC8B,CAAC,EAAEC,KAAK,KAAKA,KAAK,KAAKZ,SAAS,CAAC;;IAEhF;IACAU,kBAAkB,CAACG,MAAM,CAACZ,UAAU,EAAE,CAAC,EAAEE,WAAW,CAAC;;IAErD;IACAK,QAAQ,CAACK,MAAM,CAACP,WAAW,EAAEG,WAAW,CAACK,MAAM,EAAE,GAAGJ,kBAAkB,CAAC;;IAEvE;IACAlC,QAAQ,CAACgC,QAAQ,CAAC;;IAElB;IACA,MAAMO,SAAS,GAAGf,SAAS,GAAGC,UAAU,GAAG,OAAO,GAAG,MAAM;IAC3D,IAAIc,SAAS,KAAK,OAAO,EAAE;MACzBtB,OAAO,CAACuB,GAAG,CAAC,iBAAiB,CAAC;IAChC,CAAC,MAAM;MACLvB,OAAO,CAACuB,GAAG,CAAC,gBAAgB,CAAC;IAC/B;EACF,CAAC;EAID,MAAMC,eAAe,GAAGA,CAAC7B,CAAC,EAAEN,IAAI,EAAEL,aAAa,KAAK;IAClDC,gBAAgB,CAACD,aAAa,CAAC,CAAC,CAAC;IACjC,MAAMyC,cAAc,GAAGtB,IAAI,CAACuB,SAAS,CAACrC,IAAI,CAAC;IAC3CM,CAAC,CAACG,YAAY,CAAC6B,OAAO,CAAC,MAAM,EAAEF,cAAc,CAAC;EAChD,CAAC;EAED,oBACE/C,OAAA;IAAKE,MAAM,EAAEc,UAAW;IAACkC,UAAU,EAAEvB,SAAU;IAAAwB,QAAA,EAC5C1C,SAAS,CAAC2C,GAAG,CAAC,CAACzC,IAAI,EAAE8B,KAAK,kBACzBzC,OAAA,CAACJ,IAAI;MAEH6C,KAAK,EAAEA,KAAM;MACb9B,IAAI,EAAEA,IAAK;MACXiB,QAAQ,EAAEA,CAACC,SAAS,EAAEC,UAAU,KAAKF,QAAQ,CAACC,SAAS,EAAEC,UAAU,EAAEnB,IAAI,CAACuB,OAAO,CAAE;MACnF5B,aAAa,EAAEK,IAAI,CAACuB,OAAQ,CAAC;MAAA;MAC7BmB,OAAO,EAAE7C,IAAI,CAAC8C,IAAI,KAAK,OAAQ;MAC/BC,WAAW,EAAGtC,CAAC,IAAK6B,eAAe,CAAC7B,CAAC,EAAEN,IAAI,EAAEA,IAAI,CAACuB,OAAO,CAAE,CAAC;IAAA,GANvDvB,IAAI,CAACI,EAAE;MAAAyC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOb,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACxD,EAAA,CAvFQF,QAAQ;EAAA,QAEEH,OAAO;AAAA;AAAA8D,EAAA,GAFjB3D,QAAQ;AAyFjB,eAAeA,QAAQ;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
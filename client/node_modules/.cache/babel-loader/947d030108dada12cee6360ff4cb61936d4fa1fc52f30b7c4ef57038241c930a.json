{"ast":null,"code":"var _jsxFileName = \"/home/francis/EventPlanner/client/src/Components/TaskContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskContext = /*#__PURE__*/createContext();\nexport const TaskProvider = ({\n  children\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [sourceSection, setSourceSection] = useState(undefined); // Initialize sourceSection as undefined\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await fetch('http://localhost:5555/api/tasks');\n        if (!response.ok) {\n          throw new Error('Failed to fetch tasks');\n        }\n        const data = await response.json();\n        setTasks(data);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    fetchTasks();\n\n    // Cleanup function is not needed in this case\n  }, []); // Empty dependency array ensures the effect runs only once when the component mounts\n\n  const updateTaskList = newTasks => {\n    setTasks(newTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      tasks,\n      setTasks,\n      sourceSection,\n      setSourceSection,\n      updateTaskList\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskProvider, \"gPGJWx9XuS1flnz7ooDcj6F6FR4=\");\n_c = TaskProvider;\nexport default TaskContext;\nvar _c;\n$RefreshReg$(_c, \"TaskProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","TaskContext","TaskProvider","children","_s","tasks","setTasks","sourceSection","setSourceSection","undefined","fetchTasks","response","fetch","ok","Error","data","json","error","console","updateTaskList","newTasks","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/francis/EventPlanner/client/src/Components/TaskContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nconst TaskContext = createContext();\n\nexport const TaskProvider = ({ children }) => {\n  const [tasks, setTasks] = useState([]);\n  const [sourceSection, setSourceSection] = useState(undefined); // Initialize sourceSection as undefined\n\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await fetch('http://localhost:5555/api/tasks');\n        if (!response.ok) {\n          throw new Error('Failed to fetch tasks');\n        }\n        const data = await response.json();\n        setTasks(data);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n\n    fetchTasks();\n\n    // Cleanup function is not needed in this case\n  }, []); // Empty dependency array ensures the effect runs only once when the component mounts\n\n  const updateTaskList = (newTasks) => {\n    setTasks(newTasks);\n  };\n\n  return (\n    <TaskContext.Provider value={{ tasks, setTasks, sourceSection, setSourceSection, updateTaskList }}>\n      {children}\n    </TaskContext.Provider>\n  );\n};\n\nexport default TaskContext;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAACY,SAAS,CAAC,CAAC,CAAC;;EAG/DX,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;QAC/D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC1C;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCV,QAAQ,CAACS,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDP,UAAU,CAAC,CAAC;;IAEZ;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMS,cAAc,GAAIC,QAAQ,IAAK;IACnCd,QAAQ,CAACc,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEpB,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,KAAK;MAAEC,QAAQ;MAAEC,aAAa;MAAEC,gBAAgB;MAAEW;IAAe,CAAE;IAAAhB,QAAA,EAC/FA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACtB,EAAA,CAjCWF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAmCzB,eAAeD,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
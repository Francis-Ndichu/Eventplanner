{"ast":null,"code":"var _jsxFileName = \"/home/francis/EventPlanner/client/src/Components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport TaskList from './TaskList';\nimport { TaskContext } from './TaskContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    tasks,\n    setTasks\n  } = useContext(TaskContext);\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n    if (!destination) return;\n    if (source.droppableId === destination.droppableId) {\n      const column = columns[source.droppableId];\n      const newItems = Array.from(column.items);\n      newItems.splice(source.index, 1);\n      newItems.splice(destination.index, 0, column.items.find(item => item.id === draggableId));\n      const newColumns = {\n        ...columns,\n        [source.droppableId]: {\n          ...column,\n          items: newItems\n        }\n      };\n      setColumns(newColumns);\n    } else {\n      const sourceColumn = columns[source.droppableId];\n      const destinationColumn = columns[destination.droppableId];\n      const newSourceItems = Array.from(sourceColumn.items);\n      const newDestinationItems = Array.from(destinationColumn.items);\n      newSourceItems.splice(source.index, 1);\n      newDestinationItems.splice(destination.index, 0, sourceColumn.items.find(item => item.id === draggableId));\n      const newColumns = {\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: newSourceItems\n        },\n        [destination.droppableId]: {\n          ...destinationColumn,\n          items: newDestinationItems\n        }\n      };\n      setColumns(newColumns);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-lists\",\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"task-lists\",\n          direction: \"horizontal\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            className: \"task-list-container\",\n            children: [tasks.map((task, index) => /*#__PURE__*/_jsxDEV(TaskList, {\n              task: task,\n              index: index\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"FznqgBpv+iOCTDu0hlplf+tX4PU=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useContext","DragDropContext","Droppable","TaskList","TaskContext","jsxDEV","_jsxDEV","Dashboard","_s","tasks","setTasks","onDragEnd","result","source","destination","draggableId","droppableId","column","columns","newItems","Array","from","items","splice","index","find","item","id","newColumns","setColumns","sourceColumn","destinationColumn","newSourceItems","newDestinationItems","children","className","direction","provided","ref","innerRef","droppableProps","map","task","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","_c","$RefreshReg$"],"sources":["/home/francis/EventPlanner/client/src/Components/Dashboard.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport TaskList from './TaskList';\nimport { TaskContext } from './TaskContext';\n\nconst Dashboard = () => {\n  const { tasks, setTasks } = useContext(TaskContext);\n\n const onDragEnd = result => {\n    const { source, destination, draggableId } = result;\n    if (!destination) return;\n\n    if (source.droppableId === destination.droppableId) {\n      const column = columns[source.droppableId];\n      const newItems = Array.from(column.items);\n      newItems.splice(source.index, 1);\n      newItems.splice(destination.index, 0, column.items.find(item => item.id === draggableId));\n      const newColumns = {\n        ...columns,\n        [source.droppableId]: {\n          ...column,\n          items: newItems,\n        },\n      };\n      setColumns(newColumns);\n    } else {\n      const sourceColumn = columns[source.droppableId];\n      const destinationColumn = columns[destination.droppableId];\n      const newSourceItems = Array.from(sourceColumn.items);\n      const newDestinationItems = Array.from(destinationColumn.items);\n      newSourceItems.splice(source.index, 1);\n      newDestinationItems.splice(destination.index, 0, sourceColumn.items.find(item => item.id === draggableId));\n      const newColumns = {\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: newSourceItems,\n        },\n        [destination.droppableId]: {\n          ...destinationColumn,\n          items: newDestinationItems,\n        },\n      };\n      setColumns(newColumns);\n    }\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"dashboard\">\n        {/* Other dashboard content */}\n        <div className=\"task-lists\">\n          <Droppable droppableId=\"task-lists\" direction=\"horizontal\">\n            {(provided) => (\n              <div ref={provided.innerRef} {...provided.droppableProps} className=\"task-list-container\">\n                {tasks.map((task, index) => (\n                  <TaskList key={task.id} task={task} index={index} />\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </div>\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
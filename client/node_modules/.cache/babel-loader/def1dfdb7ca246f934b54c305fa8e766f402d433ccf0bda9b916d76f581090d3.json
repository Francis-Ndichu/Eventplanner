{"ast":null,"code":"var _jsxFileName = \"/home/francis/EventPlanner/client/src/Components/TaskList.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDrag } from 'react-dnd';\nimport Card from 'react-bootstrap/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemTypes = {\n  TASK: 'task'\n};\nfunction Task({\n  task\n}) {\n  _s();\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    item: {\n      type: ItemTypes.TASK,\n      task\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drag,\n    style: {\n      opacity: isDragging ? 0.5 : 1\n    },\n    role: \"Task\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), \" \", task.description || 'No description', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Due Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), \" \", task.due_date || 'No due date', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Priority:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), \" \", task.priority, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Assigned Users:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), \" \", task.assigned_users.map(user => user.fullName).join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(Task, \"wuumsFp4qAni9XRJfRhQAZjuD/k=\", false, function () {\n  return [useDrag];\n});\n_c = Task;\nfunction TaskList() {\n  _s2();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5555/api/tasks').then(response => response.json()).then(data => setTasks(data)).catch(error => console.error('Error fetching tasks:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n      task: task\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s2(TaskList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c2 = TaskList;\nexport default TaskList;\nvar _c, _c2;\n$RefreshReg$(_c, \"Task\");\n$RefreshReg$(_c2, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","useDrag","Card","jsxDEV","_jsxDEV","ItemTypes","TASK","Task","task","_s","isDragging","drag","item","type","collect","monitor","ref","style","opacity","role","children","Body","Title","name","fileName","_jsxFileName","lineNumber","columnNumber","Text","description","due_date","priority","assigned_users","map","user","fullName","join","_c","TaskList","_s2","tasks","setTasks","fetch","then","response","json","data","catch","error","console","id","_c2","$RefreshReg$"],"sources":["/home/francis/EventPlanner/client/src/Components/TaskList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDrag } from 'react-dnd';\n\nimport Card from 'react-bootstrap/Card';\n\nconst ItemTypes = {\n  TASK: 'task',\n};\n\nfunction Task({ task }) {\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: ItemTypes.TASK, task },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  });\n\n  return (\n    <div\n      ref={drag}\n      style={{ opacity: isDragging ? 0.5 : 1 }}\n      role=\"Task\"\n    >\n      <Card>\n        <Card.Body>\n          <Card.Title>{task.name}</Card.Title>\n          <Card.Text>\n            <strong>Description:</strong> {task.description || 'No description'}\n            <br />\n            <strong>Due Date:</strong> {task.due_date || 'No due date'}\n            <br />\n            <strong>Priority:</strong> {task.priority}\n            <br />\n            <strong>Assigned Users:</strong> {task.assigned_users.map(user => user.fullName).join(', ')}\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nfunction TaskList() {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:5555/api/tasks')\n      .then(response => response.json())\n      .then(data => setTasks(data))\n      .catch(error => console.error('Error fetching tasks:', error));\n  }, []);\n\n  return (\n    <div>\n      {tasks.map(task => (\n        <Task key={task.id} task={task} />\n      ))}\n    </div>\n  );\n}\n\nexport default TaskList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
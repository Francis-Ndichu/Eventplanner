{"ast":null,"code":"var _jsxFileName = \"/home/francis/EventPlanner/client/src/Components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Card from 'react-bootstrap/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5555/api/tasks').then(response => response.json()).then(data => setTasks(data)).catch(error => console.error('Error fetching tasks:', error));\n  }, []);\n  const handleDragEnd = result => {\n    // TODO: Implement logic to update task status based on drag and drop result\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: handleDragEnd,\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"tasks\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ...provided.droppableProps,\n        ref: provided.innerRef,\n        children: [tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n          draggableId: task.id.toString(),\n          index: index,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: task.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Description:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 32,\n                    columnNumber: 27\n                  }, this), \" \", task.description || 'No description', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 33,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Due Date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 34,\n                    columnNumber: 27\n                  }, this), \" \", task.due_date || 'No due date', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 35,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Priority:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 36,\n                    columnNumber: 27\n                  }, this), \" \", task.priority, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 37,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Assigned Users:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 38,\n                    columnNumber: 27\n                  }, this), \" \", task.assigned_users.map(user => user.fullName).join(', ')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 19\n          }, this)\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this)), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","Card","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","fetch","then","response","json","data","catch","error","console","handleDragEnd","result","onDragEnd","children","droppableId","provided","droppableProps","ref","innerRef","map","task","index","draggableId","id","toString","draggableProps","dragHandleProps","Body","Title","name","fileName","_jsxFileName","lineNumber","columnNumber","Text","description","due_date","priority","assigned_users","user","fullName","join","placeholder","_c","$RefreshReg$"],"sources":["/home/francis/EventPlanner/client/src/Components/TaskList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Card from 'react-bootstrap/Card';\n\nfunction TaskList() {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:5555/api/tasks')\n      .then(response => response.json())\n      .then(data => setTasks(data))\n      .catch(error => console.error('Error fetching tasks:', error));\n  }, []);\n\n  const handleDragEnd = (result) => {\n    // TODO: Implement logic to update task status based on drag and drop result\n  };\n\n  return (\n    <DragDropContext onDragEnd={handleDragEnd}>\n      <Droppable droppableId=\"tasks\">\n        {(provided) => (\n          <div {...provided.droppableProps} ref={provided.innerRef}>\n            {tasks.map((task, index) => (\n              <Draggable key={task.id} draggableId={task.id.toString()} index={index}>\n                {(provided) => (\n                  <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n                    <Card>\n                      <Card.Body>\n                        <Card.Title>{task.name}</Card.Title>\n                        <Card.Text>\n                          <strong>Description:</strong> {task.description || 'No description'}\n                          <br />\n                          <strong>Due Date:</strong> {task.due_date || 'No due date'}\n                          <br />\n                          <strong>Priority:</strong> {task.priority}\n                          <br />\n                          <strong>Assigned Users:</strong> {task.assigned_users.map(user => user.fullName).join(', ')}\n                        </Card.Text>\n                      </Card.Body>\n                    </Card>\n                  </div>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n}\n\nexport default TaskList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
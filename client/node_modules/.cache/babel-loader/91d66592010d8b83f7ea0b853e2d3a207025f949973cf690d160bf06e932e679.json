{"ast":null,"code":"var _jsxFileName = \"/home/francis/EventPlanner/client/src/Components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport EventCard from './EventCard';\nimport TaskList from './TaskList';\nimport { v4 as uuidv4 } from 'uuid'; // Import uuid\nimport TaskContext from './TaskContext'; // Import TaskContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    tasks,\n    setTasks,\n    columnIds,\n    setColumnIds\n  } = useContext(TaskContext); // Use TaskContext\n\n  const [columns, setColumns] = useState({\n    todo: {\n      id: uuidv4(),\n      title: 'ToDo',\n      items: [{\n        id: uuidv4(),\n        title: 'Task 1'\n      }]\n    },\n    inProgress: {\n      id: uuidv4(),\n      title: 'InProgress',\n      items: []\n    },\n    completed: {\n      id: uuidv4(),\n      title: 'Completed',\n      items: []\n    },\n    delayed: {\n      id: uuidv4(),\n      title: 'Delayed',\n      items: []\n    }\n  });\n  useEffect(() => {\n    // Update TaskContext with column IDs\n    const updatedColumnIds = Object.keys(columns).map(key => columns[key].id);\n    setColumnIds(updatedColumnIds);\n  }, [columns, setColumnIds]);\n  const onDragEnd = result => {\n    const {\n      destination,\n      source,\n      draggableId\n    } = result;\n\n    // If the item is dropped outside a droppable area, do nothing\n    if (!destination) return;\n\n    // If the item is dropped into a different column\n    if (source.droppableId !== destination.droppableId) {\n      const sourceColumn = columns[source.droppableId];\n      const destColumn = columns[destination.droppableId];\n\n      // Get the source and destination items\n      const sourceItems = [...sourceColumn.items];\n      const destItems = [...destColumn.items];\n\n      // Remove the item from the source column\n      const [removed] = sourceItems.splice(source.index, 1);\n\n      // Insert the item into the destination column\n      destItems.splice(destination.index, 0, removed);\n\n      // Update the columns state\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: sourceItems\n        },\n        [destination.droppableId]: {\n          ...destColumn,\n          items: destItems\n        }\n      });\n    } else {\n      // If the item is dropped within the same column\n      const column = columns[source.droppableId];\n      const copiedItems = [...column.items];\n\n      // Remove the item from its original position\n      const [removed] = copiedItems.splice(source.index, 1);\n\n      // Insert the item into the new position\n      copiedItems.splice(destination.index, 0, removed);\n\n      // Update the columns state\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...column,\n          items: copiedItems\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Upcoming Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EventCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"main-content\",\n          style: {\n            height: \"fit-content\",\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Main Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This is the main content area of the dashboard.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          children: Object.values(columns).map(column => /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: column.id,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              style: {\n                backgroundColor: 'lightgrey',\n                flex: '1',\n                margin: '8px',\n                minHeight: '200px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"column\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"column-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: column.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 25\n                  }, this), column.items.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: String(item.id),\n                    index: index,\n                    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      children: /*#__PURE__*/_jsxDEV(TaskList, {\n                        task: item,\n                        droppableId: column.id\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 133,\n                        columnNumber: 37\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 35\n                    }, this)\n                  }, String(item.id), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 31\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this)\n          }, column.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"9+eqCxpj91rUr6LaevlvE4zjBsY=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useContext","useEffect","DragDropContext","Droppable","Draggable","EventCard","TaskList","v4","uuidv4","TaskContext","jsxDEV","_jsxDEV","Dashboard","_s","tasks","setTasks","columnIds","setColumnIds","columns","setColumns","todo","id","title","items","inProgress","completed","delayed","updatedColumnIds","Object","keys","map","key","onDragEnd","result","destination","source","draggableId","droppableId","sourceColumn","destColumn","sourceItems","destItems","removed","splice","index","column","copiedItems","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","height","width","display","values","provided","ref","innerRef","droppableProps","backgroundColor","flex","margin","minHeight","item","String","draggableProps","dragHandleProps","task","placeholder","_c","$RefreshReg$"],"sources":["/home/francis/EventPlanner/client/src/Components/Dashboard.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport EventCard from './EventCard';\nimport TaskList from './TaskList';\nimport { v4 as uuidv4 } from 'uuid'; // Import uuid\nimport TaskContext  from './TaskContext'; // Import TaskContext\n\nconst Dashboard = () => {\n  const { tasks, setTasks, columnIds, setColumnIds } = useContext(TaskContext); // Use TaskContext\n\n  const [columns, setColumns] = useState({\n    todo: {\n      id: uuidv4(),\n      title: 'ToDo',\n      items: [\n        { id: uuidv4(), title: 'Task 1' }\n      ]\n    },\n    inProgress: {\n      id: uuidv4(),\n      title: 'InProgress',\n      items: []\n    },\n    completed: {\n      id: uuidv4(),\n      title: 'Completed',\n      items: []\n    },\n    delayed: {\n      id: uuidv4(),\n      title: 'Delayed',\n      items: []\n    }\n  });\n  useEffect(() => {\n    // Update TaskContext with column IDs\n    const updatedColumnIds = Object.keys(columns).map(key => columns[key].id);\n    setColumnIds(updatedColumnIds);\n  }, [columns, setColumnIds]);\n\n  const onDragEnd = result => {\n    const { destination, source, draggableId } = result;\n    \n    // If the item is dropped outside a droppable area, do nothing\n    if (!destination) return;\n    \n    // If the item is dropped into a different column\n    if (source.droppableId !== destination.droppableId) {\n      const sourceColumn = columns[source.droppableId];\n      const destColumn = columns[destination.droppableId];\n  \n      // Get the source and destination items\n      const sourceItems = [...sourceColumn.items];\n      const destItems = [...destColumn.items];\n  \n      // Remove the item from the source column\n      const [removed] = sourceItems.splice(source.index, 1);\n      \n      // Insert the item into the destination column\n      destItems.splice(destination.index, 0, removed);\n  \n      // Update the columns state\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: sourceItems\n        },\n        [destination.droppableId]: {\n          ...destColumn,\n          items: destItems\n        }\n      });\n    } else { // If the item is dropped within the same column\n      const column = columns[source.droppableId];\n      const copiedItems = [...column.items];\n      \n      // Remove the item from its original position\n      const [removed] = copiedItems.splice(source.index, 1);\n      \n      // Insert the item into the new position\n      copiedItems.splice(destination.index, 0, removed);\n  \n      // Update the columns state\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...column,\n          items: copiedItems\n        }\n      });\n    }\n  };\n  \n  \n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"dashboard\">\n        <aside className=\"sidebar\">\n          <h2>Upcoming Events</h2>\n          <EventCard />\n        </aside>\n        <div className=\"main-section\">\n          <main className=\"main-content\" style={{ height: \"fit-content\", width: \"100%\" }}>\n            <h1>Main Content</h1>\n            <p>This is the main content area of the dashboard.</p>\n          </main>\n          <div style={{ display: 'flex' }}>\n            {Object.values(columns).map(column => (\n              <Droppable droppableId={column.id} key={column.id}>\n                {(provided) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                    style={{\n                      backgroundColor: 'lightgrey',\n                      flex: '1',\n                      margin: '8px',\n                      minHeight: '200px'\n                    }}\n                  >\n                    <div className=\"column\">\n                      <div className=\"column-section\">\n                        <h2>{column.title}</h2>\n                        {column.items.map((item, index) => (\n                              <Draggable key={String(item.id)} draggableId={String(item.id)} index={index}>\n                                {(provided) => (\n                                  <div\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                  >\n                                    <TaskList task={item} droppableId={column.id} />\n                                  </div>\n                                )}\n                              </Draggable>\n                            ))}\n                          {provided.placeholder}\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </Droppable>\n            ))}\n          </div>\n        </div>\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/francis/EventPlanner/client/src/Components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport Task from './Task';\nimport TaskContext from './TaskContext';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList({\n  onDrop\n}) {\n  _s();\n  const {\n    tasks,\n    setTasks,\n    sourceSection\n  } = useContext(TaskContext);\n  const {\n    user\n  } = useAuth();\n  console.log(user.role);\n  const userTasks = tasks.filter(task => task.assigned_users.some(assignedUser => assignedUser.id === user.id));\n  const handleDrop = e => {\n    e.preventDefault();\n    try {\n      const droppedTaskData = e.dataTransfer.getData('task');\n      if (!droppedTaskData) {\n        // Handle empty data\n        console.error(\"Error: Empty dropped task data.\");\n        return;\n      }\n      const droppedTask = JSON.parse(droppedTaskData);\n      // Proceed with handling the dropped task\n      onDrop(droppedTask);\n    } catch (error) {\n      console.error(\"Error parsing dropped task data:\", error);\n    }\n  };\n  const allowDrop = e => {\n    e.preventDefault();\n  };\n  const moveTask = (dragIndex, hoverIndex, sourceSection, targetSection) => {\n    // Ensure source and target sections are valid\n    if (!tasks[sourceSection] || !tasks[targetSection]) {\n      console.error(\"Error: Source or target section is not defined or does not exist.\");\n      return;\n    }\n\n    // Get the dragged task\n    const draggedTask = tasks[sourceSection][dragIndex];\n\n    // Remove the dragged task from the source section\n    const updatedSourceTasks = tasks[sourceSection].filter((_, index) => index !== dragIndex);\n\n    // Insert the dragged task into the target section at the hover index\n    const updatedTargetTasks = [...tasks[targetSection]];\n    updatedTargetTasks.splice(hoverIndex, 0, draggedTask);\n\n    // Update the tasks arrays in state\n    setTasks({\n      ...tasks,\n      [sourceSection]: updatedSourceTasks,\n      [targetSection]: updatedTargetTasks\n    });\n\n    // Handle horizontal movement\n    const direction = dragIndex < hoverIndex ? 'right' : 'left';\n    if (direction === 'right') {\n      console.log('Moving right...');\n    } else {\n      console.log('Moving left...');\n    }\n  };\n  console.log('Tasks:', tasks);\n  const handleDragStart = (e, task) => {\n    // Convert task data to a string using JSON.stringify and set it as 'task' format\n    const taskDataString = JSON.stringify(task);\n    console.log('Task data being set:', taskDataString); // Log the task data being set\n    e.dataTransfer.setData('task', taskDataString); // Set the task data\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onDrop: handleDrop,\n    onDragOver: allowDrop,\n    children: userTasks.map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n      index: index,\n      task: task,\n      moveTask: (dragIndex, hoverIndex) => moveTask(dragIndex, hoverIndex, sourceSection, task.section) // Pass sourceSection dynamically\n      ,\n      sourceSection: sourceSection // Pass sourceSection as a prop\n      ,\n      isAdmin: user.role === 'admin',\n      onDragStart: e => handleDragStart(e, task)\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"W/MmY44bC4SORR+OVK8jkLKxzUs=\", false, function () {\n  return [useAuth];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useContext","Task","TaskContext","useAuth","jsxDEV","_jsxDEV","TaskList","onDrop","_s","tasks","setTasks","sourceSection","user","console","log","role","userTasks","filter","task","assigned_users","some","assignedUser","id","handleDrop","e","preventDefault","droppedTaskData","dataTransfer","getData","error","droppedTask","JSON","parse","allowDrop","moveTask","dragIndex","hoverIndex","targetSection","draggedTask","updatedSourceTasks","_","index","updatedTargetTasks","splice","direction","handleDragStart","taskDataString","stringify","setData","onDragOver","children","map","section","isAdmin","onDragStart","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/francis/EventPlanner/client/src/Components/TaskList.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport Task from './Task';\nimport TaskContext from './TaskContext';\nimport { useAuth } from './AuthContext';\n\nfunction TaskList({ onDrop }) {\n  const { tasks, setTasks, sourceSection } = useContext(TaskContext);\n  const { user } = useAuth();\nconsole.log(user.role)\nconst userTasks = tasks.filter(task => task.assigned_users.some(assignedUser => assignedUser.id === user.id));\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n    \n    try {\n      const droppedTaskData = e.dataTransfer.getData('task');\n      \n      if (!droppedTaskData) {\n        // Handle empty data\n        console.error(\"Error: Empty dropped task data.\");\n        return;\n      }\n  \n      const droppedTask = JSON.parse(droppedTaskData);\n      // Proceed with handling the dropped task\n      onDrop(droppedTask);\n    } catch (error) {\n      console.error(\"Error parsing dropped task data:\", error);\n    }\n  };\n  \n\n  const allowDrop = (e) => {\n    e.preventDefault();\n  };\n\n  const moveTask = (dragIndex, hoverIndex, sourceSection, targetSection) => {\n    // Ensure source and target sections are valid\n    if (!tasks[sourceSection] || !tasks[targetSection]) {\n      console.error(\"Error: Source or target section is not defined or does not exist.\");\n      return;\n    }\n  \n    // Get the dragged task\n    const draggedTask = tasks[sourceSection][dragIndex];\n  \n    // Remove the dragged task from the source section\n    const updatedSourceTasks = tasks[sourceSection].filter((_, index) => index !== dragIndex);\n  \n    // Insert the dragged task into the target section at the hover index\n    const updatedTargetTasks = [...tasks[targetSection]];\n    updatedTargetTasks.splice(hoverIndex, 0, draggedTask);\n  \n    // Update the tasks arrays in state\n    setTasks({\n      ...tasks,\n      [sourceSection]: updatedSourceTasks,\n      [targetSection]: updatedTargetTasks\n    });\n  \n    // Handle horizontal movement\n    const direction = dragIndex < hoverIndex ? 'right' : 'left';\n    if (direction === 'right') {\n      console.log('Moving right...');\n    } else {\n      console.log('Moving left...');\n    }\n  };\n  \n  \n  \n  console.log('Tasks:', tasks);\n  \n  const handleDragStart = (e, task) => {\n    // Convert task data to a string using JSON.stringify and set it as 'task' format\n    const taskDataString = JSON.stringify(task);\n    console.log('Task data being set:', taskDataString); // Log the task data being set\n    e.dataTransfer.setData('task', taskDataString); // Set the task data\n};\n\n  \n  \n  \n  return (\n    <div onDrop={handleDrop} onDragOver={allowDrop}>\n      {userTasks.map((task, index) => (\n      <Task\n      key={task.id}\n      index={index}\n      task={task}\n      moveTask={(dragIndex, hoverIndex) => moveTask(dragIndex, hoverIndex, sourceSection, task.section)} // Pass sourceSection dynamically\n      sourceSection={sourceSection} // Pass sourceSection as a prop\n      isAdmin={user.role === 'admin'}\n      onDragStart={(e) => handleDragStart(e, task)} \n    />\n    \n     \n      ))}\n    </div>\n  );\n}\n  \n\nexport default TaskList;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
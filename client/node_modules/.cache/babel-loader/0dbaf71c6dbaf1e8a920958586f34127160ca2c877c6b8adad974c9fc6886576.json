{"ast":null,"code":"var _jsxFileName = \"/home/francis/EventPlanner/client/src/Components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { DndProvider, useDrag, useDrop } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport '../index.css'; // Import your CSS file for styling\n\n// Card component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = ({\n  id,\n  title,\n  status,\n  moveCard\n}) => {\n  _s();\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    type: 'CARD',\n    item: {\n      id,\n      title,\n      status\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drag,\n    className: `dashboard-card ${isDragging ? 'dragging' : ''}`,\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(Card, \"wuumsFp4qAni9XRJfRhQAZjuD/k=\", false, function () {\n  return [useDrag];\n});\n_c = Card;\nclass Dashboard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [{\n        id: 1,\n        title: 'Prepare presentation slides',\n        status: 'todo'\n      }, {\n        id: 2,\n        title: 'Buy groceries',\n        status: 'inprogress'\n      }, {\n        id: 3,\n        title: 'Call mom',\n        status: 'done'\n      }\n      // Add more tasks as needed\n      ]\n    };\n    this.moveCard = (id, targetStatus) => {\n      // Update the status of the card with the given id\n      this.setState(prevState => {\n        const updatedTasks = prevState.tasks.map(task => task.id === id ? {\n          ...task,\n          status: targetStatus\n        } : task);\n        return {\n          tasks: updatedTasks\n        };\n      });\n    };\n  }\n  render() {\n    const {\n      tasks\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(DndProvider, {\n      backend: HTML5Backend,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Kanban Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kanban-board\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"kanban-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"To Do\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), tasks.map(task => task.status === 'todo' && /*#__PURE__*/_jsxDEV(Card, {\n              id: task.id,\n              title: task.title,\n              status: task.status,\n              moveCard: this.moveCard\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"kanban-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"In Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), tasks.map(task => task.status === 'inprogress' && /*#__PURE__*/_jsxDEV(Card, {\n              id: task.id,\n              title: task.title,\n              status: task.status,\n              moveCard: this.moveCard\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"kanban-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), tasks.map(task => task.status === 'done' && /*#__PURE__*/_jsxDEV(Card, {\n              id: task.id,\n              title: task.title,\n              status: task.status,\n              moveCard: this.moveCard\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","DndProvider","useDrag","useDrop","HTML5Backend","jsxDEV","_jsxDEV","Card","id","title","status","moveCard","_s","isDragging","drag","type","item","collect","monitor","ref","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Dashboard","Component","constructor","args","state","tasks","targetStatus","setState","prevState","updatedTasks","map","task","render","backend","$RefreshReg$"],"sources":["/home/francis/EventPlanner/client/src/Components/Dashboard.js"],"sourcesContent":["import React from 'react';\nimport { DndProvider, useDrag, useDrop } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport '../index.css'; // Import your CSS file for styling\n\n\n// Card component\nconst Card = ({ id, title, status, moveCard }) => {\n    const [{ isDragging }, drag] = useDrag({\n        type: 'CARD',\n        item: { id, title, status },\n        collect: (monitor) => ({\n            isDragging: !!monitor.isDragging(),\n        }),\n    });\n\n    return (\n        <div ref={drag} className={`dashboard-card ${isDragging ? 'dragging' : ''}`}>\n            {title}\n        </div>\n    );\n};\n\nclass Dashboard extends React.Component {\n    state = {\n        tasks: [\n            { id: 1, title: 'Prepare presentation slides', status: 'todo' },\n            { id: 2, title: 'Buy groceries', status: 'inprogress' },\n            { id: 3, title: 'Call mom', status: 'done' },\n            // Add more tasks as needed\n        ]\n    };\n\n    moveCard = (id, targetStatus) => {\n        // Update the status of the card with the given id\n        this.setState(prevState => {\n            const updatedTasks = prevState.tasks.map(task =>\n                task.id === id ? { ...task, status: targetStatus } : task\n            );\n            return { tasks: updatedTasks };\n        });\n    };\n\n    render() {\n        const { tasks } = this.state;\n\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <div className=\"dashboard-container\">\n                    <h2>Kanban Board</h2>\n                    <div className=\"kanban-board\">\n                        <div className=\"kanban-column\">\n                            <h3>To Do</h3>\n                            {tasks.map(task => task.status === 'todo' && (\n                                <Card key={task.id} id={task.id} title={task.title} status={task.status} moveCard={this.moveCard} />\n                            ))}\n                        </div>\n                        <div className=\"kanban-column\">\n                            <h3>In Progress</h3>\n                            {tasks.map(task => task.status === 'inprogress' && (\n                                <Card key={task.id} id={task.id} title={task.title} status={task.status} moveCard={this.moveCard} />\n                            ))}\n                        </div>\n                        <div className=\"kanban-column\">\n                            <h3>Done</h3>\n                            {tasks.map(task => task.status === 'done' && (\n                                <Card key={task.id} id={task.id} title={task.title} status={task.status} moveCard={this.moveCard} />\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            </DndProvider>\n        );\n    }\n}\n\nexport default Dashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
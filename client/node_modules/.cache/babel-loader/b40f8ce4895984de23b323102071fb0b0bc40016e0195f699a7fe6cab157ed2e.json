{"ast":null,"code":"var _jsxFileName = \"/home/francis/EventPlanner/client/src/Components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Card, Col, Container, Row } from 'react-bootstrap';\nimport TaskContext from './TaskContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    tasks,\n    setTasks\n  } = useContext(TaskContext);\n  const handleDragEnd = result => {\n    if (!result.destination) {\n      return;\n    }\n    const {\n      source,\n      destination\n    } = result;\n\n    // Update the tasks array with the new status\n    const updatedTasks = [...tasks];\n    const movedTask = updatedTasks.find(task => task.id.toString() === result.draggableId);\n    movedTask.status = destination.droppableId;\n    setTasks(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: handleDragEnd,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      style: {\n        height: '100vh',\n        backgroundColor: '#F5F5F5',\n        padding: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"todo\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              style: {\n                minHeight: '100px'\n              },\n              children: [tasks.map((task, index) => {\n                if (task.status === 'todo') {\n                  return /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: task.id.toString(),\n                    index: index,\n                    children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      className: \"customDraggable\",\n                      children: /*#__PURE__*/_jsxDEV(Card, {\n                        style: {\n                          opacity: snapshot.isDragging ? 0.8 : 1\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                            children: task.title\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 45,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                            children: task.description\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 46,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                            children: task.subtasks.map((subtask, subIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                              children: subtask\n                            }, subIndex, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 49,\n                              columnNumber: 39\n                            }, this))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 47,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 44,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 43,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 37,\n                      columnNumber: 29\n                    }, this)\n                  }, task.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 35,\n                    columnNumber: 25\n                  }, this);\n                }\n              }), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"FznqgBpv+iOCTDu0hlplf+tX4PU=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useContext","DragDropContext","Droppable","Draggable","Card","Col","Container","Row","TaskContext","jsxDEV","_jsxDEV","Dashboard","_s","tasks","setTasks","handleDragEnd","result","destination","source","updatedTasks","movedTask","find","task","id","toString","draggableId","status","droppableId","onDragEnd","children","fluid","style","height","backgroundColor","padding","fileName","_jsxFileName","lineNumber","columnNumber","provided","ref","innerRef","droppableProps","minHeight","map","index","snapshot","draggableProps","dragHandleProps","className","opacity","isDragging","Body","Title","title","Text","description","subtasks","subtask","subIndex","placeholder","_c","$RefreshReg$"],"sources":["/home/francis/EventPlanner/client/src/Components/TaskList.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Card, Col, Container, Row } from 'react-bootstrap';\nimport TaskContext from './TaskContext';\n\nconst Dashboard = () => {\n  const { tasks, setTasks } = useContext(TaskContext);\n\n  const handleDragEnd = (result) => {\n    if (!result.destination) {\n      return;\n    }\n\n    const { source, destination } = result;\n\n    // Update the tasks array with the new status\n    const updatedTasks = [...tasks];\n    const movedTask = updatedTasks.find(task => task.id.toString() === result.draggableId);\n    movedTask.status = destination.droppableId;\n    setTasks(updatedTasks);\n  };\n\n  return (\n    <DragDropContext onDragEnd={handleDragEnd}>\n      <Container fluid style={{ height: '100vh', backgroundColor: '#F5F5F5', padding: '20px' }}>\n        <Row>\n          <Col>\n            <h3>Todo</h3>\n            <Droppable droppableId=\"todo\">\n              {(provided) => (\n                <div ref={provided.innerRef} {...provided.droppableProps} style={{ minHeight: '100px' }}>\n                  {tasks.map((task, index) => {\n                    if (task.status === 'todo') {\n                      return (\n                        <Draggable key={task.id} draggableId={task.id.toString()} index={index}>\n                          {(provided, snapshot) => (\n                            <div\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                              className=\"customDraggable\"\n                            >\n                              <Card style={{ opacity: snapshot.isDragging ? 0.8 : 1 }}>\n                                <Card.Body>\n                                  <Card.Title>{task.title}</Card.Title>\n                                  <Card.Text>{task.description}</Card.Text>\n                                  <ul>\n                                    {task.subtasks.map((subtask, subIndex) => (\n                                      <li key={subIndex}>{subtask}</li>\n                                    ))}\n                                  </ul>\n                                </Card.Body>\n                              </Card>\n                            </div>\n                          )}\n                        </Draggable>\n                      );\n                    }\n                  })}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </Col>\n          {/* Repeat the above Droppable and Draggable logic for other columns */}\n        </Row>\n      </Container>\n    </DragDropContext>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAC3E,SAASC,IAAI,EAAEC,GAAG,EAAEC,SAAS,EAAEC,GAAG,QAAQ,iBAAiB;AAC3D,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGd,UAAU,CAACQ,WAAW,CAAC;EAEnD,MAAMO,aAAa,GAAIC,MAAM,IAAK;IAChC,IAAI,CAACA,MAAM,CAACC,WAAW,EAAE;MACvB;IACF;IAEA,MAAM;MAAEC,MAAM;MAAED;IAAY,CAAC,GAAGD,MAAM;;IAEtC;IACA,MAAMG,YAAY,GAAG,CAAC,GAAGN,KAAK,CAAC;IAC/B,MAAMO,SAAS,GAAGD,YAAY,CAACE,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,CAACC,QAAQ,CAAC,CAAC,KAAKR,MAAM,CAACS,WAAW,CAAC;IACtFL,SAAS,CAACM,MAAM,GAAGT,WAAW,CAACU,WAAW;IAC1Cb,QAAQ,CAACK,YAAY,CAAC;EACxB,CAAC;EAED,oBACET,OAAA,CAACT,eAAe;IAAC2B,SAAS,EAAEb,aAAc;IAAAc,QAAA,eACxCnB,OAAA,CAACJ,SAAS;MAACwB,KAAK;MAACC,KAAK,EAAE;QAAEC,MAAM,EAAE,OAAO;QAAEC,eAAe,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAL,QAAA,eACvFnB,OAAA,CAACH,GAAG;QAAAsB,QAAA,eACFnB,OAAA,CAACL,GAAG;UAAAwB,QAAA,gBACFnB,OAAA;YAAAmB,QAAA,EAAI;UAAI;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACb5B,OAAA,CAACR,SAAS;YAACyB,WAAW,EAAC,MAAM;YAAAE,QAAA,EACzBU,QAAQ,iBACR7B,OAAA;cAAK8B,GAAG,EAAED,QAAQ,CAACE,QAAS;cAAA,GAAKF,QAAQ,CAACG,cAAc;cAAEX,KAAK,EAAE;gBAAEY,SAAS,EAAE;cAAQ,CAAE;cAAAd,QAAA,GACrFhB,KAAK,CAAC+B,GAAG,CAAC,CAACtB,IAAI,EAAEuB,KAAK,KAAK;gBAC1B,IAAIvB,IAAI,CAACI,MAAM,KAAK,MAAM,EAAE;kBAC1B,oBACEhB,OAAA,CAACP,SAAS;oBAAesB,WAAW,EAAEH,IAAI,CAACC,EAAE,CAACC,QAAQ,CAAC,CAAE;oBAACqB,KAAK,EAAEA,KAAM;oBAAAhB,QAAA,EACpEA,CAACU,QAAQ,EAAEO,QAAQ,kBAClBpC,OAAA;sBACE8B,GAAG,EAAED,QAAQ,CAACE,QAAS;sBAAA,GACnBF,QAAQ,CAACQ,cAAc;sBAAA,GACvBR,QAAQ,CAACS,eAAe;sBAC5BC,SAAS,EAAC,iBAAiB;sBAAApB,QAAA,eAE3BnB,OAAA,CAACN,IAAI;wBAAC2B,KAAK,EAAE;0BAAEmB,OAAO,EAAEJ,QAAQ,CAACK,UAAU,GAAG,GAAG,GAAG;wBAAE,CAAE;wBAAAtB,QAAA,eACtDnB,OAAA,CAACN,IAAI,CAACgD,IAAI;0BAAAvB,QAAA,gBACRnB,OAAA,CAACN,IAAI,CAACiD,KAAK;4BAAAxB,QAAA,EAAEP,IAAI,CAACgC;0BAAK;4BAAAnB,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAa,CAAC,eACrC5B,OAAA,CAACN,IAAI,CAACmD,IAAI;4BAAA1B,QAAA,EAAEP,IAAI,CAACkC;0BAAW;4BAAArB,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAY,CAAC,eACzC5B,OAAA;4BAAAmB,QAAA,EACGP,IAAI,CAACmC,QAAQ,CAACb,GAAG,CAAC,CAACc,OAAO,EAAEC,QAAQ,kBACnCjD,OAAA;8BAAAmB,QAAA,EAAoB6B;4BAAO,GAAlBC,QAAQ;8BAAAxB,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OAAe,CACjC;0BAAC;4BAAAH,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACA,CAAC;wBAAA;0BAAAH,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACI;sBAAC;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACR;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACJ;kBACN,GApBahB,IAAI,CAACC,EAAE;oBAAAY,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAqBZ,CAAC;gBAEhB;cACF,CAAC,CAAC,EACDC,QAAQ,CAACqB,WAAW;YAAA;cAAAzB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB;UACN;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEtB,CAAC;AAAA1B,EAAA,CAhEKD,SAAS;AAAAkD,EAAA,GAATlD,SAAS;AAkEf,eAAeA,SAAS;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
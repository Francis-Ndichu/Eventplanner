{"ast":null,"code":"var _jsxFileName = \"/home/francis/EventPlanner/client/src/Components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport EventCard from './EventCard';\nimport TaskList from './TaskList';\nimport { v4 as uuidv4 } from 'uuid'; // Import uuid\nimport TaskContext from './TaskContext'; // Import TaskContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    tasks,\n    setTasks,\n    columnIds,\n    setColumnIds\n  } = useContext(TaskContext); // Use TaskContext\n\n  const [columns, setColumns] = useState({\n    todo: {\n      id: uuidv4(),\n      title: 'ToDo',\n      items: [{\n        id: uuidv4(),\n        title: 'Task 1'\n      }]\n    },\n    inProgress: {\n      id: uuidv4(),\n      title: 'InProgress',\n      items: []\n    },\n    completed: {\n      id: uuidv4(),\n      title: 'Completed',\n      items: []\n    },\n    delayed: {\n      id: uuidv4(),\n      title: 'Delayed',\n      items: []\n    }\n  });\n  useEffect(() => {\n    // Update TaskContext with column IDs\n    const updatedColumnIds = Object.keys(columns).map(key => columns[key].id);\n    setColumnIds(updatedColumnIds);\n  }, [columns, setColumnIds]);\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n    if (!destination) return;\n    const sourceColumn = columns[source.droppableId];\n    const destinationColumn = columns[destination.droppableId];\n    console.log('Source droppable ID:', source.droppableId);\n    console.log('Destination droppable ID:', destination.droppableId);\n    if (!sourceColumn || !destinationColumn) {\n      console.error('Invalid source or destination column');\n      return;\n    }\n\n    // Get the task being dragged\n    const draggedTask = tasks.find(task => task.id === draggableId);\n    if (!draggedTask) {\n      console.error('Invalid dragged task');\n      return;\n    }\n\n    // Remove the dragged task from the source column\n    const updatedSourceItems = sourceColumn.items.filter(item => item.id !== draggableId);\n\n    // Add the dragged task to the destination column\n    const updatedDestinationItems = [...destinationColumn.items];\n    updatedDestinationItems.splice(destination.index, 0, draggedTask);\n\n    // Update the tasks state\n    const updatedTasks = tasks.map(task => {\n      if (task.id === draggableId) {\n        return {\n          ...task,\n          column: destinationColumn.title\n        }; // Update the column property of the task\n      }\n      return task;\n    });\n\n    // Update the columns state\n    const updatedColumns = {\n      ...columns,\n      [sourceColumn.title.toLowerCase()]: {\n        ...sourceColumn,\n        items: updatedSourceItems\n      },\n      [destinationColumn.title.toLowerCase()]: {\n        ...destinationColumn,\n        items: updatedDestinationItems\n      }\n    };\n    setTasks(updatedTasks);\n    setColumns(updatedColumns);\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Upcoming Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EventCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"main-content\",\n          style: {\n            height: \"fit-content\",\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Main Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This is the main content area of the dashboard.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          children: Object.values(columns).map(column => /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: column.id,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              style: {\n                backgroundColor: 'lightgrey',\n                flex: '1',\n                margin: '8px',\n                minHeight: '200px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"column\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"column-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: column.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 25\n                  }, this), column.items.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: String(item.id),\n                    index: index,\n                    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      children: /*#__PURE__*/_jsxDEV(TaskList, {\n                        task: item,\n                        droppableId: column.id\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 130,\n                        columnNumber: 37\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 35\n                    }, this)\n                  }, String(item.id), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 31\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this)\n          }, column.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"9+eqCxpj91rUr6LaevlvE4zjBsY=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useContext","useEffect","DragDropContext","Droppable","Draggable","EventCard","TaskList","v4","uuidv4","TaskContext","jsxDEV","_jsxDEV","Dashboard","_s","tasks","setTasks","columnIds","setColumnIds","columns","setColumns","todo","id","title","items","inProgress","completed","delayed","updatedColumnIds","Object","keys","map","key","onDragEnd","result","source","destination","draggableId","sourceColumn","droppableId","destinationColumn","console","log","error","draggedTask","find","task","updatedSourceItems","filter","item","updatedDestinationItems","splice","index","updatedTasks","column","updatedColumns","toLowerCase","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","height","width","display","values","provided","ref","innerRef","droppableProps","backgroundColor","flex","margin","minHeight","String","draggableProps","dragHandleProps","placeholder","_c","$RefreshReg$"],"sources":["/home/francis/EventPlanner/client/src/Components/Dashboard.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport EventCard from './EventCard';\nimport TaskList from './TaskList';\nimport { v4 as uuidv4 } from 'uuid'; // Import uuid\nimport TaskContext  from './TaskContext'; // Import TaskContext\n\nconst Dashboard = () => {\n  const { tasks, setTasks, columnIds, setColumnIds } = useContext(TaskContext); // Use TaskContext\n\n  const [columns, setColumns] = useState({\n    todo: {\n      id: uuidv4(),\n      title: 'ToDo',\n      items: [\n        { id: uuidv4(), title: 'Task 1' }\n      ]\n    },\n    inProgress: {\n      id: uuidv4(),\n      title: 'InProgress',\n      items: []\n    },\n    completed: {\n      id: uuidv4(),\n      title: 'Completed',\n      items: []\n    },\n    delayed: {\n      id: uuidv4(),\n      title: 'Delayed',\n      items: []\n    }\n  });\n  useEffect(() => {\n    // Update TaskContext with column IDs\n    const updatedColumnIds = Object.keys(columns).map(key => columns[key].id);\n    setColumnIds(updatedColumnIds);\n  }, [columns, setColumnIds]);\n\n\n\n  const onDragEnd = result => {\n    const { source, destination, draggableId } = result;\n    if (!destination) return;\n  \n    const sourceColumn = columns[source.droppableId];\n    const destinationColumn = columns[destination.droppableId];\n  \n    console.log('Source droppable ID:', source.droppableId);\n    console.log('Destination droppable ID:', destination.droppableId);\n  \n    if (!sourceColumn || !destinationColumn) {\n      console.error('Invalid source or destination column');\n      return;\n    }\n  \n    // Get the task being dragged\n    const draggedTask = tasks.find(task => task.id === draggableId);\n  \n    if (!draggedTask) {\n      console.error('Invalid dragged task');\n      return;\n    }\n  \n    // Remove the dragged task from the source column\n    const updatedSourceItems = sourceColumn.items.filter(item => item.id !== draggableId);\n  \n    // Add the dragged task to the destination column\n    const updatedDestinationItems = [...destinationColumn.items];\n    updatedDestinationItems.splice(destination.index, 0, draggedTask);\n  \n    // Update the tasks state\n    const updatedTasks = tasks.map(task => {\n      if (task.id === draggableId) {\n        return { ...task, column: destinationColumn.title }; // Update the column property of the task\n      }\n      return task;\n    });\n  \n    // Update the columns state\n    const updatedColumns = {\n      ...columns,\n      [sourceColumn.title.toLowerCase()]: { ...sourceColumn, items: updatedSourceItems },\n      [destinationColumn.title.toLowerCase()]: { ...destinationColumn, items: updatedDestinationItems }\n    };\n  \n    setTasks(updatedTasks);\n    setColumns(updatedColumns);\n  };\n  \n  \n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"dashboard\">\n        <aside className=\"sidebar\">\n          <h2>Upcoming Events</h2>\n          <EventCard />\n        </aside>\n        <div className=\"main-section\">\n          <main className=\"main-content\" style={{ height: \"fit-content\", width: \"100%\" }}>\n            <h1>Main Content</h1>\n            <p>This is the main content area of the dashboard.</p>\n          </main>\n          <div style={{ display: 'flex' }}>\n            {Object.values(columns).map(column => (\n              <Droppable droppableId={column.id} key={column.id}>\n                {(provided) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                    style={{\n                      backgroundColor: 'lightgrey',\n                      flex: '1',\n                      margin: '8px',\n                      minHeight: '200px'\n                    }}\n                  >\n                    <div className=\"column\">\n                      <div className=\"column-section\">\n                        <h2>{column.title}</h2>\n                        {column.items.map((item, index) => (\n                              <Draggable key={String(item.id)} draggableId={String(item.id)} index={index}>\n                                {(provided) => (\n                                  <div\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                  >\n                                    <TaskList task={item} droppableId={column.id} />\n                                  </div>\n                                )}\n                              </Draggable>\n                            ))}\n                          {provided.placeholder}\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </Droppable>\n            ))}\n          </div>\n        </div>\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
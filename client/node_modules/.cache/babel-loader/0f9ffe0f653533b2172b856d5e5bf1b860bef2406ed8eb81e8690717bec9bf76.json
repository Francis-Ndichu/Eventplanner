{"ast":null,"code":"var _jsxFileName = \"/home/francis/EventPlanner/client/src/Components/EventCard.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventCard = ({\n  event\n}) => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: event.event_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [\"Number of Participants: \", event.num_participants]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [\"Description: \", event.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [\"Materials: \", event.materials.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [\"Estimated Cost: \", event.estimated_cost]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [\"Venue: \", event.venue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [\"Time: \", event.time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = EventCard;\nconst EventsList = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    // Fetch event data from the backend\n    fetch('http://localhost:5555/api/events') // Adjust the API endpoint as per your backend implementation\n    .then(response => response.json()).then(data => setEvents(data)).catch(error => console.error('Error fetching events:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), events.map(event => /*#__PURE__*/_jsxDEV(EventCard, {\n      event: event\n    }, event.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(EventsList, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c2 = EventsList;\nexport default EventsList;\nvar _c, _c2;\n$RefreshReg$(_c, \"EventCard\");\n$RefreshReg$(_c2, \"EventsList\");","map":{"version":3,"names":["useState","useEffect","Card","Button","jsxDEV","_jsxDEV","EventCard","event","children","Body","Title","event_name","fileName","_jsxFileName","lineNumber","columnNumber","Text","num_participants","description","materials","join","estimated_cost","venue","time","_c","EventsList","_s","events","setEvents","fetch","then","response","json","data","catch","error","console","map","id","_c2","$RefreshReg$"],"sources":["/home/francis/EventPlanner/client/src/Components/EventCard.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Card, Button } from 'react-bootstrap';\n\nconst EventCard = ({ event }) => {\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title>{event.event_name}</Card.Title>\n        <Card.Text>Number of Participants: {event.num_participants}</Card.Text>\n        <Card.Text>Description: {event.description}</Card.Text>\n        <Card.Text>Materials: {event.materials.join(', ')}</Card.Text>\n        <Card.Text>Estimated Cost: {event.estimated_cost}</Card.Text>\n        <Card.Text>Venue: {event.venue}</Card.Text>\n        <Card.Text>Time: {event.time}</Card.Text>\n        {/* Add any other details you want to display */}\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst EventsList = () => {\n  const [events, setEvents] = useState([]);\n\n  useEffect(() => {\n    // Fetch event data from the backend\n    fetch('http://localhost:5555/api/events') // Adjust the API endpoint as per your backend implementation\n      .then(response => response.json())\n      .then(data => setEvents(data))\n      .catch(error => console.error('Error fetching events:', error));\n  }, []);\n\n  return (\n    <div>\n      <h2>Events</h2>\n      {events.map(event => (\n        <EventCard key={event.id} event={event} />\n      ))}\n    </div>\n  );\n};\n\nexport default EventsList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
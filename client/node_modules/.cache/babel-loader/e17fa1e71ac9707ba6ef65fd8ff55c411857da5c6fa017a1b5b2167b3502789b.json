{"ast":null,"code":"var _jsxFileName = \"/home/francis/EventPlanner/client/src/Components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport Task from './Task';\nimport TaskContext from './TaskContext';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList({\n  onDrop\n}) {\n  _s();\n  const {\n    tasks,\n    setTasks,\n    sourceSection\n  } = useContext(TaskContext);\n  const {\n    user\n  } = useAuth();\n  console.log(user.customer_type);\n  const handleDrop = e => {\n    e.preventDefault();\n    try {\n      const droppedTaskData = e.dataTransfer.getData('task');\n      if (!droppedTaskData) {\n        // Handle empty data\n        console.error(\"Error: Empty dropped task data.\");\n        return;\n      }\n      const droppedTask = JSON.parse(droppedTaskData);\n      // Proceed with handling the dropped task\n      onDrop(droppedTask);\n    } catch (error) {\n      console.error(\"Error parsing dropped task data:\", error);\n    }\n  };\n  const allowDrop = e => {\n    e.preventDefault();\n  };\n  const moveTask = (dragIndex, hoverIndex, sourceSection, targetSection) => {\n    console.log(\"Source Section:\", sourceSection);\n    console.log(\"Tasks Object:\", tasks);\n    console.log(\"Tasks at Source Section:\", tasks[sourceSection]);\n    if (!tasks[sourceSection]) {\n      console.error(\"Error: Source section is not defined or does not exist.\");\n      return;\n    }\n\n    // Determine the direction of movement\n    const direction = dragIndex < hoverIndex ? 'right' : 'left';\n\n    // Create a copy of the tasks arrays for source and target sections\n    const updatedSourceTasks = [...tasks[sourceSection]];\n    const updatedTargetTasks = [...tasks[targetSection]];\n\n    // Get the dragged task\n    const draggedTask = updatedSourceTasks[dragIndex];\n\n    // Remove the task from the source section\n    updatedSourceTasks.splice(dragIndex, 1);\n\n    // Insert the task into the target section at the hover index\n    updatedTargetTasks.splice(hoverIndex, 0, draggedTask);\n\n    // Update the tasks arrays in state\n    setTasks({\n      ...tasks,\n      [sourceSection]: updatedSourceTasks,\n      [targetSection]: updatedTargetTasks\n    });\n\n    // Handle horizontal movement\n    if (direction === 'left' || direction === 'right') {\n      // If moving right (forward)\n      if (direction === 'right') {\n        // Check if the hoverIndex is the last index in the target section\n        if (hoverIndex === updatedTargetTasks.length - 1) {\n          // Perform necessary actions when moving right\n          console.log('Moving right...');\n        }\n      }\n      // If moving left (backward)\n      else {\n        // Check if the hoverIndex is the first index in the target section\n        if (hoverIndex === 0) {\n          // Perform necessary actions when moving left\n          console.log('Moving left...');\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onDrop: handleDrop,\n    onDragOver: allowDrop,\n    children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n      index: index,\n      task: task,\n      moveTask: (dragIndex, hoverIndex) => moveTask(dragIndex, hoverIndex, sourceSection, task.section) // Pass target section dynamically\n      ,\n      sourceSection: sourceSection,\n      isAdmin: user.role === 'admin'\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"W/MmY44bC4SORR+OVK8jkLKxzUs=\", false, function () {\n  return [useAuth];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useContext","Task","TaskContext","useAuth","jsxDEV","_jsxDEV","TaskList","onDrop","_s","tasks","setTasks","sourceSection","user","console","log","customer_type","handleDrop","e","preventDefault","droppedTaskData","dataTransfer","getData","error","droppedTask","JSON","parse","allowDrop","moveTask","dragIndex","hoverIndex","targetSection","direction","updatedSourceTasks","updatedTargetTasks","draggedTask","splice","length","onDragOver","children","map","task","index","section","isAdmin","role","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/francis/EventPlanner/client/src/Components/TaskList.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport Task from './Task';\nimport TaskContext from './TaskContext';\nimport { useAuth } from './AuthContext';\n\nfunction TaskList({ onDrop }) {\n  const { tasks, setTasks, sourceSection } = useContext(TaskContext);\n  const { user } = useAuth();\nconsole.log(user.customer_type)\n  const handleDrop = (e) => {\n    e.preventDefault();\n    \n    try {\n      const droppedTaskData = e.dataTransfer.getData('task');\n      if (!droppedTaskData) {\n        // Handle empty data\n        console.error(\"Error: Empty dropped task data.\");\n        return;\n      }\n  \n      const droppedTask = JSON.parse(droppedTaskData);\n      // Proceed with handling the dropped task\n      onDrop(droppedTask);\n    } catch (error) {\n      console.error(\"Error parsing dropped task data:\", error);\n    }\n  };\n  \n\n  const allowDrop = (e) => {\n    e.preventDefault();\n  };\n\n  const moveTask = (dragIndex, hoverIndex, sourceSection, targetSection) => {\n    console.log(\"Source Section:\", sourceSection);\n    console.log(\"Tasks Object:\", tasks);\n    console.log(\"Tasks at Source Section:\", tasks[sourceSection]);\n    if (!tasks[sourceSection]) {\n      console.error(\"Error: Source section is not defined or does not exist.\");\n      return;\n    }\n  \n    // Determine the direction of movement\n    const direction = dragIndex < hoverIndex ? 'right' : 'left';\n  \n    // Create a copy of the tasks arrays for source and target sections\n    const updatedSourceTasks = [...tasks[sourceSection]];\n    const updatedTargetTasks = [...tasks[targetSection]];\n  \n    // Get the dragged task\n    const draggedTask = updatedSourceTasks[dragIndex];\n  \n    // Remove the task from the source section\n    updatedSourceTasks.splice(dragIndex, 1);\n  \n    // Insert the task into the target section at the hover index\n    updatedTargetTasks.splice(hoverIndex, 0, draggedTask);\n  \n    // Update the tasks arrays in state\n    setTasks({\n      ...tasks,\n      [sourceSection]: updatedSourceTasks,\n      [targetSection]: updatedTargetTasks\n    });\n  \n    // Handle horizontal movement\n    if (direction === 'left' || direction === 'right') {\n      // If moving right (forward)\n      if (direction === 'right') {\n        // Check if the hoverIndex is the last index in the target section\n        if (hoverIndex === updatedTargetTasks.length - 1) {\n          // Perform necessary actions when moving right\n          console.log('Moving right...');\n        }\n      }\n      // If moving left (backward)\n      else {\n        // Check if the hoverIndex is the first index in the target section\n        if (hoverIndex === 0) {\n          // Perform necessary actions when moving left\n          console.log('Moving left...');\n        }\n      }\n    }\n  };\n  \n  \n  \n\n  return (\n    <div onDrop={handleDrop} onDragOver={allowDrop}>\n      {tasks.map((task, index) => (\n        <Task\n          key={task.id}\n          index={index}\n          task={task}\n          moveTask={(dragIndex, hoverIndex) => moveTask(dragIndex, hoverIndex, sourceSection, task.section)} // Pass target section dynamically\n          sourceSection={sourceSection}\n          isAdmin={user.role === 'admin'}\n        />\n      ))}\n    </div>\n  );\n      }  \n\nexport default TaskList;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/francis/EventPlanner/client/src/Components/CompletedTaskList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDrag } from 'react-dnd'; // Import useDrag hook\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CompletedTaskList({\n  tasks,\n  onDrop\n}) {\n  _s();\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    type: 'TASK',\n    item: {\n      type: 'TASK',\n      task: tasks[0] // Assuming all tasks have the same type\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const handleDrop = e => {\n    e.preventDefault();\n    const droppedTask = JSON.parse(e.dataTransfer.getData('task'));\n    onDrop(droppedTask);\n  };\n  const allowDrop = e => {\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drag // Attach drag ref to make the component draggable\n    ,\n    onDrop: handleDrop,\n    onDragOver: allowDrop,\n    style: {\n      opacity: isDragging ? 0.5 : 1\n    } // Adjust opacity while dragging\n    ,\n    children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n      index: index,\n      task: task\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(CompletedTaskList, \"wuumsFp4qAni9XRJfRhQAZjuD/k=\", false, function () {\n  return [useDrag];\n});\n_c = CompletedTaskList;\nexport default CompletedTaskList;\nvar _c;\n$RefreshReg$(_c, \"CompletedTaskList\");","map":{"version":3,"names":["React","useDrag","Task","jsxDEV","_jsxDEV","CompletedTaskList","tasks","onDrop","_s","isDragging","drag","type","item","task","collect","monitor","handleDrop","e","preventDefault","droppedTask","JSON","parse","dataTransfer","getData","allowDrop","ref","onDragOver","style","opacity","children","map","index","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/francis/EventPlanner/client/src/Components/CompletedTaskList.js"],"sourcesContent":["import React from 'react';\nimport { useDrag } from 'react-dnd'; // Import useDrag hook\nimport Task from './Task';\n\nfunction CompletedTaskList({ tasks, onDrop }) {\n  const [{ isDragging }, drag] = useDrag({\n    type: 'TASK',\n    item: {\n      type: 'TASK',\n      task: tasks[0], // Assuming all tasks have the same type\n    },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n    const droppedTask = JSON.parse(e.dataTransfer.getData('task'));\n    onDrop(droppedTask);\n  };\n\n  const allowDrop = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <div\n      ref={drag} // Attach drag ref to make the component draggable\n      onDrop={handleDrop}\n      onDragOver={allowDrop}\n      style={{ opacity: isDragging ? 0.5 : 1 }} // Adjust opacity while dragging\n    >\n      {tasks.map((task, index) => (\n        <Task key={task.id} index={index} task={task} />\n      ))}\n    </div>\n  );\n}\n\nexport default CompletedTaskList;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,WAAW,CAAC,CAAC;AACrC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,iBAAiBA,CAAC;EAAEC,KAAK;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC5C,MAAM,CAAC;IAAEC;EAAW,CAAC,EAAEC,IAAI,CAAC,GAAGT,OAAO,CAAC;IACrCU,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE;MACJD,IAAI,EAAE,MAAM;MACZE,IAAI,EAAEP,KAAK,CAAC,CAAC,CAAC,CAAE;IAClB,CAAC;IACDQ,OAAO,EAAGC,OAAO,KAAM;MACrBN,UAAU,EAAEM,OAAO,CAACN,UAAU,CAAC;IACjC,CAAC;EACH,CAAC,CAAC;EAEF,MAAMO,UAAU,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACJ,CAAC,CAACK,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC9DhB,MAAM,CAACY,WAAW,CAAC;EACrB,CAAC;EAED,MAAMK,SAAS,GAAIP,CAAC,IAAK;IACvBA,CAAC,CAACC,cAAc,CAAC,CAAC;EACpB,CAAC;EAED,oBACEd,OAAA;IACEqB,GAAG,EAAEf,IAAK,CAAC;IAAA;IACXH,MAAM,EAAES,UAAW;IACnBU,UAAU,EAAEF,SAAU;IACtBG,KAAK,EAAE;MAAEC,OAAO,EAAEnB,UAAU,GAAG,GAAG,GAAG;IAAE,CAAE,CAAC;IAAA;IAAAoB,QAAA,EAEzCvB,KAAK,CAACwB,GAAG,CAAC,CAACjB,IAAI,EAAEkB,KAAK,kBACrB3B,OAAA,CAACF,IAAI;MAAe6B,KAAK,EAAEA,KAAM;MAAClB,IAAI,EAAEA;IAAK,GAAlCA,IAAI,CAACmB,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA6B,CAChD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC5B,EAAA,CAlCQH,iBAAiB;EAAA,QACOJ,OAAO;AAAA;AAAAoC,EAAA,GAD/BhC,iBAAiB;AAoC1B,eAAeA,iBAAiB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
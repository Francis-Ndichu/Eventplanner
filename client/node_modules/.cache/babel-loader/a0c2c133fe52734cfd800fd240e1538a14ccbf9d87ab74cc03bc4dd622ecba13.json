{"ast":null,"code":"var _jsxFileName = \"/home/francis/EventPlanner/client/src/Components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport InProgressTaskList from './InProgressTaskList';\nimport DelayedTaskList from './DelayedTaskList';\nimport CompletedTaskList from './CompletedTaskList';\nimport EventCard from './EventCard';\nimport TaskList from './TaskList';\nimport TaskContext from './TaskContext'; // Import TaskContext\nimport { v4 as uuidv4 } from 'uuid'; // Import uuid\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [columns, setColumns] = useState({\n    todo: {\n      title: 'ToDo',\n      items: [{\n        id: uuidv4(),\n        title: 'Task 1'\n      }, {\n        id: uuidv4(),\n        title: 'Task 2'\n      }, {\n        id: uuidv4(),\n        title: 'Task 3'\n      }\n      // Add more initial tasks here if needed\n      ]\n    },\n    inProgress: {\n      title: 'InProgress',\n      items: []\n    },\n    completed: {\n      title: 'Completed',\n      items: []\n    },\n    delayed: {\n      title: 'Delayed',\n      items: []\n    }\n  });\n  const onDragEnd = result => {\n    const {\n      destination,\n      source,\n      draggableId\n    } = result;\n    if (!destination) {\n      return;\n    }\n    if (source.droppableId !== destination.droppableId) {\n      const sourceColumn = columns[source.droppableId];\n      const destColumn = columns[destination.droppableId];\n      const sourceItems = [...sourceColumn.items];\n      const destItems = [...destColumn.items];\n      const [removed] = sourceItems.splice(source.index, 1);\n      destItems.splice(destination.index, 0, removed);\n      setColumns(prevColumns => ({\n        ...prevColumns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: sourceItems\n        },\n        [destination.droppableId]: {\n          ...destColumn,\n          items: destItems\n        }\n      }));\n    } else {\n      const column = columns[source.droppableId];\n      const copiedItems = [...column.items];\n      const [removed] = copiedItems.splice(source.index, 1);\n      copiedItems.splice(destination.index, 0, removed);\n      setColumns(prevColumns => ({\n        ...prevColumns,\n        [source.droppableId]: {\n          ...column,\n          items: copiedItems\n        }\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Upcoming Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EventCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"main-content\",\n          style: {\n            height: \"fit-content\",\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Main Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This is the main content area of the dashboard.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          children: Object.keys(columns).map(columnId => {\n            const column = columns[columnId];\n            return /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: columnId,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.droppableProps,\n                style: {\n                  backgroundColor: 'lightgrey',\n                  flex: '1'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"column\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"column-section\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                      children: column.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 27\n                    }, this), column.items.map((item, index) => /*#__PURE__*/_jsxDEV(TaskList, {\n                      index: index,\n                      task: item\n                    }, item.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 29\n                    }, this)), provided.placeholder]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this)\n            }, columnId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"aB3oryFnoBYxi3Bm1ZSQ9eXfFgI=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","InProgressTaskList","DelayedTaskList","CompletedTaskList","EventCard","TaskList","TaskContext","v4","uuidv4","jsxDEV","_jsxDEV","Dashboard","_s","columns","setColumns","todo","title","items","id","inProgress","completed","delayed","onDragEnd","result","destination","source","draggableId","droppableId","sourceColumn","destColumn","sourceItems","destItems","removed","splice","index","prevColumns","column","copiedItems","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","height","width","display","Object","keys","map","columnId","provided","ref","innerRef","droppableProps","backgroundColor","flex","item","task","placeholder","_c","$RefreshReg$"],"sources":["/home/francis/EventPlanner/client/src/Components/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport InProgressTaskList from './InProgressTaskList';\nimport DelayedTaskList from './DelayedTaskList';\nimport CompletedTaskList from './CompletedTaskList';\nimport EventCard from './EventCard';\nimport TaskList from './TaskList';\nimport TaskContext from './TaskContext'; // Import TaskContext\nimport { v4 as uuidv4 } from 'uuid'; // Import uuid\n\nconst Dashboard = () => {\n  const [columns, setColumns] = useState({\n    todo: {\n      title: 'ToDo',\n      items: [\n        { id: uuidv4(), title: 'Task 1' },\n        { id: uuidv4(), title: 'Task 2' },\n        { id: uuidv4(), title: 'Task 3' }\n        // Add more initial tasks here if needed\n      ]\n    },\n    inProgress: {\n      title: 'InProgress',\n      items: []\n    },\n    completed: {\n      title: 'Completed',\n      items: []\n    },\n    delayed: {\n      title: 'Delayed',\n      items: []\n    }\n  });\n\n  const onDragEnd = result => {\n    const { destination, source, draggableId } = result;\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId !== destination.droppableId) {\n      const sourceColumn = columns[source.droppableId];\n      const destColumn = columns[destination.droppableId];\n      const sourceItems = [...sourceColumn.items];\n      const destItems = [...destColumn.items];\n      const [removed] = sourceItems.splice(source.index, 1);\n      destItems.splice(destination.index, 0, removed);\n\n      setColumns(prevColumns => ({\n        ...prevColumns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: sourceItems\n        },\n        [destination.droppableId]: {\n          ...destColumn,\n          items: destItems\n        }\n      }));\n    } else {\n      const column = columns[source.droppableId];\n      const copiedItems = [...column.items];\n      const [removed] = copiedItems.splice(source.index, 1);\n      copiedItems.splice(destination.index, 0, removed);\n\n      setColumns(prevColumns => ({\n        ...prevColumns,\n        [source.droppableId]: {\n          ...column,\n          items: copiedItems\n        }\n      }));\n    }\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"dashboard\">\n        <aside className=\"sidebar\">\n          <h2>Upcoming Events</h2>\n          <EventCard />\n        </aside>\n        <div className=\"main-section\">\n          <main className=\"main-content\" style={{ height: \"fit-content\", width: \"100%\" }}>\n            <h1>Main Content</h1>\n            <p>This is the main content area of the dashboard.</p>\n          </main>\n          <div style={{ display: 'flex' }}>\n            {Object.keys(columns).map(columnId => {\n              const column = columns[columnId];\n              return (\n                <Droppable droppableId={columnId} key={columnId}>\n                  {(provided) => (\n                    <div ref={provided.innerRef} {...provided.droppableProps} style={{ backgroundColor: 'lightgrey', flex: '1' }}>\n                      <div className=\"column\">\n                        <div className=\"column-section\">\n                          <h2>{column.title}</h2>\n                          {column.items.map((item, index) => (\n                            <TaskList key={item.id} index={index} task={item} />\n                          ))}\n                          {provided.placeholder}\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </Droppable>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
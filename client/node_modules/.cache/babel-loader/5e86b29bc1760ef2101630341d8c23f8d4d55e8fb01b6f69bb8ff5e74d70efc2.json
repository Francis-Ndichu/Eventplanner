{"ast":null,"code":"var _jsxFileName = \"/home/francis/EventPlanner/client/src/Components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport EventCard from './EventCard';\nimport TaskList from './TaskList';\nimport { v4 as uuidv4 } from 'uuid'; // Import uuid\nimport TaskContext from './TaskContext'; // Import TaskContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    tasks,\n    setTasks\n  } = useContext(TaskContext); // Use TaskContext\n\n  const [columns, setColumns] = useState({\n    todo: {\n      id: uuidv4(),\n      title: 'ToDo',\n      items: [{\n        id: uuidv4(),\n        title: 'Task 1'\n      }]\n    },\n    inProgress: {\n      id: uuidv4(),\n      title: 'InProgress',\n      items: []\n    },\n    completed: {\n      id: uuidv4(),\n      title: 'Completed',\n      items: []\n    },\n    delayed: {\n      id: uuidv4(),\n      title: 'Delayed',\n      items: []\n    }\n  });\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n    if (!destination) return;\n    if (source.droppableId === destination.droppableId) {\n      const column = columns[source.droppableId];\n      const newItems = Array.from(column.items);\n      newItems.splice(source.index, 1);\n      newItems.splice(destination.index, 0, column.items.find(item => item.id === draggableId));\n      const newColumns = {\n        ...columns,\n        [source.droppableId]: {\n          ...column,\n          items: newItems\n        }\n      };\n      setColumns(newColumns);\n    } else {\n      const sourceColumn = columns[source.droppableId];\n      const destinationColumn = columns[destination.droppableId];\n      const newSourceItems = Array.from(sourceColumn.items);\n      const newDestinationItems = Array.from(destinationColumn.items);\n      newSourceItems.splice(source.index, 1);\n      newDestinationItems.splice(destination.index, 0, sourceColumn.items.find(item => item.id === draggableId));\n      const newColumns = {\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: newSourceItems\n        },\n        [destination.droppableId]: {\n          ...destinationColumn,\n          items: newDestinationItems\n        }\n      };\n      setColumns(newColumns);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Upcoming Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EventCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"main-content\",\n          style: {\n            height: \"fit-content\",\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Main Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This is the main content area of the dashboard.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          children: Object.values(columns).map(column => /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: column.id,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              style: {\n                backgroundColor: 'lightgrey',\n                flex: '1',\n                margin: '8px',\n                minHeight: '200px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"column\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"column-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: column.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 25\n                  }, this), column.items.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: String(item.id),\n                    index: index,\n                    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      children: /*#__PURE__*/_jsxDEV(TaskList, {\n                        task: item,\n                        droppableId: column.id\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 112,\n                        columnNumber: 32\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 30\n                    }, this)\n                  }, item.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 26\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this)\n          }, column.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"QHyBesdpfHf+Qu066e1BLEkW1cg=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useContext","DragDropContext","Droppable","Draggable","EventCard","TaskList","v4","uuidv4","TaskContext","jsxDEV","_jsxDEV","Dashboard","_s","tasks","setTasks","columns","setColumns","todo","id","title","items","inProgress","completed","delayed","onDragEnd","result","source","destination","draggableId","droppableId","column","newItems","Array","from","splice","index","find","item","newColumns","sourceColumn","destinationColumn","newSourceItems","newDestinationItems","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","height","width","display","Object","values","map","provided","ref","innerRef","droppableProps","backgroundColor","flex","margin","minHeight","String","draggableProps","dragHandleProps","task","placeholder","_c","$RefreshReg$"],"sources":["/home/francis/EventPlanner/client/src/Components/Dashboard.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport EventCard from './EventCard';\nimport TaskList from './TaskList';\nimport { v4 as uuidv4 } from 'uuid'; // Import uuid\nimport TaskContext  from './TaskContext'; // Import TaskContext\n\nconst Dashboard = () => {\n  const { tasks, setTasks } = useContext(TaskContext); // Use TaskContext\n\n  const [columns, setColumns] = useState({\n    todo: {\n      id: uuidv4(),\n      title: 'ToDo',\n      items: [\n        { id: uuidv4(), title: 'Task 1' }\n      ]\n    },\n    inProgress: {\n      id: uuidv4(),\n      title: 'InProgress',\n      items: []\n    },\n    completed: {\n      id: uuidv4(),\n      title: 'Completed',\n      items: []\n    },\n    delayed: {\n      id: uuidv4(),\n      title: 'Delayed',\n      items: []\n    }\n  });\n\n  const onDragEnd = result => {\n    const { source, destination, draggableId } = result;\n    if (!destination) return;\n\n    if (source.droppableId === destination.droppableId) {\n      const column = columns[source.droppableId];\n      const newItems = Array.from(column.items);\n      newItems.splice(source.index, 1);\n      newItems.splice(destination.index, 0, column.items.find(item => item.id === draggableId));\n      const newColumns = {\n        ...columns,\n        [source.droppableId]: {\n          ...column,\n          items: newItems,\n        },\n      };\n      setColumns(newColumns);\n    } else {\n      const sourceColumn = columns[source.droppableId];\n      const destinationColumn = columns[destination.droppableId];\n      const newSourceItems = Array.from(sourceColumn.items);\n      const newDestinationItems = Array.from(destinationColumn.items);\n      newSourceItems.splice(source.index, 1);\n      newDestinationItems.splice(destination.index, 0, sourceColumn.items.find(item => item.id === draggableId));\n      const newColumns = {\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: newSourceItems,\n        },\n        [destination.droppableId]: {\n          ...destinationColumn,\n          items: newDestinationItems,\n        },\n      };\n      setColumns(newColumns);\n    }\n  };\n  \n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"dashboard\">\n        <aside className=\"sidebar\">\n          <h2>Upcoming Events</h2>\n          <EventCard />\n        </aside>\n        <div className=\"main-section\">\n          <main className=\"main-content\" style={{ height: \"fit-content\", width: \"100%\" }}>\n            <h1>Main Content</h1>\n            <p>This is the main content area of the dashboard.</p>\n          </main>\n          <div style={{ display: 'flex' }}>\n            {Object.values(columns).map(column => (\n              <Droppable droppableId={column.id} key={column.id}>\n                {(provided) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                    style={{\n                      backgroundColor: 'lightgrey',\n                      flex: '1',\n                      margin: '8px',\n                      minHeight: '200px'\n                    }}\n                  >\n                    <div className=\"column\">\n                      <div className=\"column-section\">\n                        <h2>{column.title}</h2>\n                        {column.items.map((item, index) => (\n                         <Draggable key={item.id} draggableId={String(item.id)} index={index}>\n                           {(provided) => (\n                             <div\n                               ref={provided.innerRef}\n                               {...provided.draggableProps}\n                               {...provided.dragHandleProps}\n                             >\n                               <TaskList task={item} droppableId={column.id} />\n                             </div>\n                           )}\n                         </Draggable>\n                        ))}\n                        {provided.placeholder}\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </Droppable>\n            ))}\n          </div>\n        </div>\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/francis/EventPlanner/client/src/Components/CreateEvent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CreateEvent() {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const [materials, setMaterials] = useState(['']); // Initial state with one empty field\n\n  const handleCloseModal = () => setShowModal(false);\n  const handleShowModal = () => setShowModal(true);\n  const handleMaterialChange = (index, value) => {\n    const updatedMaterials = [...materials];\n    updatedMaterials[index] = value;\n    setMaterials(updatedMaterials);\n  };\n  const handleAddMaterialField = () => {\n    setMaterials([...materials, '']);\n  };\n  const handleRemoveMaterialField = index => {\n    const updatedMaterials = [...materials];\n    updatedMaterials.splice(index, 1);\n    setMaterials(updatedMaterials);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShowModal,\n      children: \"Open Modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Create Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            disabled: true,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Materials Required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this), materials.map((material, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: material,\n                  onChange: e => handleMaterialChange(index, e.target.value),\n                  placeholder: \"Material\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  className: \"ms-2\",\n                  onClick: () => handleRemoveMaterialField(index),\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                onClick: handleAddMaterialField,\n                children: \"Add Material\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleCloseModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleCloseModal,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(CreateEvent, \"1H/gvVwT3nfhYEqUzt1IcxzfyiU=\");\n_c = CreateEvent;\nexport default CreateEvent;\nvar _c;\n$RefreshReg$(_c, \"CreateEvent\");","map":{"version":3,"names":["React","useState","Button","Form","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateEvent","_s","showModal","setShowModal","materials","setMaterials","handleCloseModal","handleShowModal","handleMaterialChange","index","value","updatedMaterials","handleAddMaterialField","handleRemoveMaterialField","splice","children","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","show","onHide","Header","closeButton","Title","Body","disabled","Group","className","Label","map","material","Control","type","onChange","e","target","placeholder","Footer","_c","$RefreshReg$"],"sources":["/home/francis/EventPlanner/client/src/Components/CreateEvent.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\n\nfunction CreateEvent() {\n  const [showModal, setShowModal] = useState(false);\n  const [materials, setMaterials] = useState(['']); // Initial state with one empty field\n\n  const handleCloseModal = () => setShowModal(false);\n  const handleShowModal = () => setShowModal(true);\n\n  const handleMaterialChange = (index, value) => {\n    const updatedMaterials = [...materials];\n    updatedMaterials[index] = value;\n    setMaterials(updatedMaterials);\n  };\n\n  const handleAddMaterialField = () => {\n    setMaterials([...materials, '']);\n  };\n\n  const handleRemoveMaterialField = (index) => {\n    const updatedMaterials = [...materials];\n    updatedMaterials.splice(index, 1);\n    setMaterials(updatedMaterials);\n  };\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShowModal}>\n        Open Modal\n      </Button>\n\n      <Modal show={showModal} onHide={handleCloseModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Create Event</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <fieldset disabled>\n              {/* Other form fields */}\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Materials Required</Form.Label>\n                {materials.map((material, index) => (\n                  <div key={index} className=\"d-flex mb-2\">\n                    <Form.Control\n                      type=\"text\"\n                      value={material}\n                      onChange={(e) => handleMaterialChange(index, e.target.value)}\n                      placeholder=\"Material\"\n                    />\n                    <Button variant=\"danger\" className=\"ms-2\" onClick={() => handleRemoveMaterialField(index)}>\n                      Remove\n                    </Button>\n                  </div>\n                ))}\n                <Button variant=\"secondary\" onClick={handleAddMaterialField}>Add Material</Button>\n              </Form.Group>\n            </fieldset>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleCloseModal}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleCloseModal}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default CreateEvent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/francis/EventPlanner/client/src/Components/TaskList.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport Card from 'react-bootstrap/Card';\nimport { ItemTypes } from './ItemTypes'; // Assuming ItemTypes is defined in a separate file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Task({\n  task,\n  index,\n  moveTask,\n  onDrop\n}) {\n  _s();\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    type: ItemTypes.TASK,\n    item: {\n      type: ItemTypes.TASK,\n      task,\n      index\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  });\n  const [, drop] = useDrop({\n    accept: ItemTypes.TASK,\n    hover(item, monitor) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n\n      // Determine rectangle on screen\n      const hoverBoundingRect = ref.current.getBoundingClientRect();\n\n      // Get vertical middle\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset();\n\n      // Get pixels to the top\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n\n      // Move the item\n      moveTask(dragIndex, hoverIndex, item.task);\n      item.index = hoverIndex;\n    },\n    drop: item => {\n      moveTask(item.index, index, item.task);\n    }\n  });\n  const ref = React.useRef(null);\n  drag(drop(ref));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    style: {\n      opacity: isDragging ? 0.5 : 1\n    },\n    role: \"listitem\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), \" \", task.description || 'No description', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Due Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), \" \", task.due_date || 'No due date', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Priority:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), \" \", task.priority, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Assigned Users:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), \" \", task.assigned_users.map(user => user.fullName).join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Task, \"Ifw/hWtrfNyCzXc02qVggIXA3Q0=\", false, function () {\n  return [useDrag, useDrop];\n});\n_c = Task;\nfunction TaskList() {\n  _s2();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch('http://localhost:5555/api/tasks');\n      if (!response.ok) {\n        throw new Error('Failed to fetch tasks');\n      }\n      const data = await response.json();\n      setTasks(data);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n  const moveTask = (dragIndex, hoverIndex, task) => {\n    const draggedTask = tasks[dragIndex];\n    const updatedTasks = [...tasks];\n    updatedTasks.splice(dragIndex, 1);\n    updatedTasks.splice(hoverIndex, 0, draggedTask);\n    setTasks(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n      index: index,\n      task: task,\n      moveTask: moveTask\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_s2(TaskList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c2 = TaskList;\nexport default TaskList;\nvar _c, _c2;\n$RefreshReg$(_c, \"Task\");\n$RefreshReg$(_c2, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","useDrag","useDrop","Card","ItemTypes","jsxDEV","_jsxDEV","Task","task","index","moveTask","onDrop","_s","isDragging","drag","type","TASK","item","collect","monitor","drop","accept","hover","ref","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","useRef","style","opacity","role","children","Body","Title","name","fileName","_jsxFileName","lineNumber","columnNumber","Text","description","due_date","priority","assigned_users","map","user","fullName","join","_c","TaskList","_s2","tasks","setTasks","fetchTasks","response","fetch","ok","Error","data","json","error","console","draggedTask","updatedTasks","splice","id","_c2","$RefreshReg$"],"sources":["/home/francis/EventPlanner/client/src/Components/TaskList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport Card from 'react-bootstrap/Card';\nimport { ItemTypes } from './ItemTypes'; // Assuming ItemTypes is defined in a separate file\n\nfunction Task({ task, index, moveTask,  onDrop }) {\n  const [{ isDragging }, drag] = useDrag({\n    type: ItemTypes.TASK,\n    item: { type: ItemTypes.TASK, task, index },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  });\n\n  const [, drop] = useDrop({\n    accept: ItemTypes.TASK,\n    hover(item, monitor) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n  \n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n  \n      // Determine rectangle on screen\n      const hoverBoundingRect = ref.current.getBoundingClientRect();\n  \n      // Get vertical middle\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n  \n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset();\n  \n      // Get pixels to the top\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n  \n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n  \n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n  \n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n  \n      // Move the item\n      moveTask(dragIndex, hoverIndex, item.task);\n      item.index = hoverIndex;\n    },\n    drop: (item) => {\n      moveTask(item.index, index, item.task);\n    },\n  });\n\n  const ref = React.useRef(null);\n  drag(drop(ref));\n\n  return (\n    <div\n      ref={ref}\n      style={{ opacity: isDragging ? 0.5 : 1 }}\n      role=\"listitem\"\n    >\n      <Card>\n        <Card.Body>\n          <Card.Title>{task.name}</Card.Title>\n          <Card.Text>\n            <strong>Description:</strong> {task.description || 'No description'}\n            <br />\n            <strong>Due Date:</strong> {task.due_date || 'No due date'}\n            <br />\n            <strong>Priority:</strong> {task.priority}\n            <br />\n            <strong>Assigned Users:</strong> {task.assigned_users.map(user => user.fullName).join(', ')}\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nfunction TaskList() {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch('http://localhost:5555/api/tasks');\n      if (!response.ok) {\n        throw new Error('Failed to fetch tasks');\n      }\n      const data = await response.json();\n      setTasks(data);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  const moveTask = (dragIndex, hoverIndex, task) => {\n    const draggedTask = tasks[dragIndex];\n    const updatedTasks = [...tasks];\n    updatedTasks.splice(dragIndex, 1);\n    updatedTasks.splice(hoverIndex, 0, draggedTask);\n    setTasks(updatedTasks);\n  };\n\n  return (\n    <div>\n      {tasks.map((task, index) => (\n        <Task key={task.id} index={index} task={task} moveTask={moveTask} />\n      ))}\n    </div>\n  );\n}\n\nexport default TaskList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/francis/EventPlanner/client/src/Components/Dashboard.js\";\nimport React from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport '../index.css'; // Import your CSS file for styling\n\n// Card component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = ({\n  id,\n  title\n}) => {\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: id.toString(),\n    index: id,\n    children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: provided.innerRef,\n      ...provided.draggableProps,\n      ...provided.dragHandleProps,\n      className: `dashboard-card ${snapshot.isDragging ? 'dragging' : ''}`,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = Card;\nclass Dashboard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      upcomingEvents: [{\n        id: 1,\n        title: 'Meeting with Client',\n        category: 'professional'\n      }, {\n        id: 2,\n        title: 'Birthday Party',\n        category: 'social'\n      }, {\n        id: 3,\n        title: 'Project Deadline',\n        category: 'professional'\n      }, {\n        id: 4,\n        title: 'Dinner with Friends',\n        category: 'personal'\n      }\n      // Add more events as needed\n      ],\n      tasks: [{\n        id: 5,\n        title: 'Prepare presentation slides',\n        category: 'professional'\n      }, {\n        id: 6,\n        title: 'Buy groceries',\n        category: 'personal'\n      }, {\n        id: 7,\n        title: 'Call mom',\n        category: 'personal'\n      }\n      // Add more tasks as needed\n      ]\n    };\n    this.onDragEnd = result => {\n      const {\n        destination,\n        source,\n        draggableId\n      } = result;\n\n      // If there's no destination, or the position didn't change, do nothing\n      if (!destination || destination.index === source.index) {\n        return;\n      }\n\n      // Determine the category based on the droppableId\n      const category = destination.droppableId === 'upcomingEvents' ? 'upcomingEvents' : 'tasks';\n\n      // Create a copy of the state\n      const newState = [...this.state[category]];\n\n      // Remove the card from its original position\n      const [removed] = newState.splice(source.index, 1);\n\n      // Insert the card into its new position\n      newState.splice(destination.index, 0, removed);\n\n      // Update the state with the new order\n      this.setState({\n        [category]: newState\n      });\n    };\n  }\n  render() {\n    const {\n      upcomingEvents,\n      tasks\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Dashboard Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"upcomingEvents\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              className: \"col flex-column border-end\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 37\n              }, this), upcomingEvents.map((event, index) => /*#__PURE__*/_jsxDEV(Card, {\n                id: event.id,\n                title: event.title\n              }, event.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 41\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"tasks\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              className: \"col flex-column border-end\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Tasks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this), tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Card, {\n                id: task.id,\n                title: task.title\n              }, task.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 41\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","Card","id","title","draggableId","toString","index","children","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","className","isDragging","fileName","_jsxFileName","lineNumber","columnNumber","_c","Dashboard","Component","constructor","args","state","upcomingEvents","category","tasks","onDragEnd","result","destination","source","droppableId","newState","removed","splice","setState","render","droppableProps","map","event","placeholder","task","$RefreshReg$"],"sources":["/home/francis/EventPlanner/client/src/Components/Dashboard.js"],"sourcesContent":["import React from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport '../index.css'; // Import your CSS file for styling\n\n// Card component\nconst Card = ({ id, title }) => {\n    return (\n        <Draggable draggableId={id.toString()} index={id}>\n            {(provided, snapshot) => (\n                <div\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    className={`dashboard-card ${snapshot.isDragging ? 'dragging' : ''}`}\n                >\n                    {title}\n                </div>\n            )}\n        </Draggable>\n    );\n};\n\nclass Dashboard extends React.Component {\n    state = {\n        upcomingEvents: [\n            { id: 1, title: 'Meeting with Client', category: 'professional' },\n            { id: 2, title: 'Birthday Party', category: 'social' },\n            { id: 3, title: 'Project Deadline', category: 'professional' },\n            { id: 4, title: 'Dinner with Friends', category: 'personal' },\n            // Add more events as needed\n        ],\n        tasks: [\n            { id: 5, title: 'Prepare presentation slides', category: 'professional' },\n            { id: 6, title: 'Buy groceries', category: 'personal' },\n            { id: 7, title: 'Call mom', category: 'personal' },\n            // Add more tasks as needed\n        ]\n    };\n\n    onDragEnd = (result) => {\n        const { destination, source, draggableId } = result;\n\n        // If there's no destination, or the position didn't change, do nothing\n        if (!destination || destination.index === source.index) {\n            return;\n        }\n\n        // Determine the category based on the droppableId\n        const category = destination.droppableId === 'upcomingEvents' ? 'upcomingEvents' : 'tasks';\n\n        // Create a copy of the state\n        const newState = [...this.state[category]];\n\n        // Remove the card from its original position\n        const [removed] = newState.splice(source.index, 1);\n\n        // Insert the card into its new position\n        newState.splice(destination.index, 0, removed);\n\n        // Update the state with the new order\n        this.setState({ [category]: newState });\n    };\n\n    render() {\n        const { upcomingEvents, tasks } = this.state;\n\n        return (\n            <DragDropContext onDragEnd={this.onDragEnd}>\n                <div className=\"dashboard-container\">\n                    <h2>Dashboard Overview</h2>\n                    <div className=\"row\">\n                        <Droppable droppableId=\"upcomingEvents\">\n                            {(provided) => (\n                                <div\n                                    ref={provided.innerRef}\n                                    {...provided.droppableProps}\n                                    className=\"col flex-column border-end\"\n                                >\n                                    <h3>All</h3>\n                                    {upcomingEvents.map((event, index) => (\n                                        <Card key={event.id} id={event.id} title={event.title} />\n                                    ))}\n                                    {provided.placeholder}\n                                </div>\n                            )}\n                        </Droppable>\n                        <Droppable droppableId=\"tasks\">\n                            {(provided) => (\n                                <div\n                                    ref={provided.innerRef}\n                                    {...provided.droppableProps}\n                                    className=\"col flex-column border-end\"\n                                >\n                                    <h3>Tasks</h3>\n                                    {tasks.map((task, index) => (\n                                        <Card key={task.id} id={task.id} title={task.title} />\n                                    ))}\n                                    {provided.placeholder}\n                                </div>\n                            )}\n                        </Droppable>\n                    </div>\n                </div>\n            </DragDropContext>\n        );\n    }\n}\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/francis/EventPlanner/client/src/Components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport InProgressTaskList from './InProgressTaskList';\nimport DelayedTaskList from './DelayedTaskList';\nimport EventCard from './EventCard';\nimport TaskList from './TaskList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [toDoTasks, setToDoTasks] = useState([]);\n  const [inProgressTasks, setInProgressTasks] = useState([]);\n  const [delayedTasks, setDelayedTasks] = useState([]);\n  const handleToDoDrop = (index, task, event) => {\n    if (event) {\n      // Ensure event object exists before accessing its properties\n      // Prevent the default behavior to allow dropping\n      event.preventDefault();\n\n      // Optionally, add visual feedback for valid drop targets\n      if (event.dataTransfer) {\n        // Ensure dataTransfer exists before accessing its properties\n        event.dataTransfer.dropEffect = 'move';\n      }\n    }\n\n    // Determine the status of the dropped task\n    switch (task.status) {\n      case 'inProgress':\n        // Move the task to the 'InProgress' list\n        setInProgressTasks(prevTasks => [...prevTasks, task]);\n        break;\n      case 'delayed':\n        // Move the task to the 'Delayed' list\n        setDelayedTasks(prevTasks => [...prevTasks, task]);\n        break;\n      default:\n        // If the task status is 'toDo', update the 'ToDo' list\n        setToDoTasks(prevTasks => {\n          const updatedTasks = [...prevTasks];\n          // Check if the task already exists in the 'ToDo' list\n          const existingIndex = updatedTasks.findIndex(item => item.id === task.id);\n          if (existingIndex !== -1) {\n            updatedTasks.splice(existingIndex, 1); // Remove the existing task\n          }\n          // Insert the task at the specified index\n          updatedTasks.splice(index, 0, task);\n          return updatedTasks;\n        });\n        break;\n    }\n    setToDoTasks(prevTasks => {\n      const updatedTasks = [...prevTasks];\n      const existingIndex = updatedTasks.findIndex(item => item.id === task.id);\n      if (existingIndex !== -1) {\n        updatedTasks.splice(existingIndex, 1);\n      }\n      updatedTasks.splice(index, 0, task);\n      return updatedTasks;\n    });\n  };\n  const handleInProgressDrop = (index, task) => {\n    setToDoTasks(prevTasks => prevTasks.filter((_, i) => i !== index));\n    setDelayedTasks(prevTasks => prevTasks.filter((_, i) => i !== index));\n    setInProgressTasks(prevTasks => [...prevTasks, task]);\n  };\n  const handleDelayedDrop = (index, task) => {\n    setToDoTasks(prevTasks => prevTasks.filter((_, i) => i !== index));\n    setInProgressTasks(prevTasks => prevTasks.filter((_, i) => i !== index));\n    setDelayedTasks(prevTasks => [...prevTasks, task]);\n  };\n  useEffect(() => {\n    setInProgressTasks([]);\n    setDelayedTasks([]);\n  }, [toDoTasks]); // Dependency added\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upcoming Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EventCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"separator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"ToDo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n          tasks: toDoTasks,\n          onDrop: handleToDoDrop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"InProgress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InProgressTaskList, {\n          tasks: inProgressTasks,\n          onDrop: handleInProgressDrop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Delayed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DelayedTaskList, {\n          tasks: delayedTasks,\n          onDrop: handleDelayedDrop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Main Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is the main content area of the dashboard.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"Sv+1rDIoJigw73Sl5XQIS1CKL1c=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","InProgressTaskList","DelayedTaskList","EventCard","TaskList","jsxDEV","_jsxDEV","Dashboard","_s","toDoTasks","setToDoTasks","inProgressTasks","setInProgressTasks","delayedTasks","setDelayedTasks","handleToDoDrop","index","task","event","preventDefault","dataTransfer","dropEffect","status","prevTasks","updatedTasks","existingIndex","findIndex","item","id","splice","handleInProgressDrop","filter","_","i","handleDelayedDrop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","tasks","onDrop","_c","$RefreshReg$"],"sources":["/home/francis/EventPlanner/client/src/Components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport InProgressTaskList from './InProgressTaskList';\nimport DelayedTaskList from './DelayedTaskList';\nimport EventCard from './EventCard';\nimport TaskList from './TaskList';\n\nfunction Dashboard() {\n  const [toDoTasks, setToDoTasks] = useState([]);\n  const [inProgressTasks, setInProgressTasks] = useState([]);\n  const [delayedTasks, setDelayedTasks] = useState([]);\n\n  const handleToDoDrop = (index, task, event) => {\n    if (event) { // Ensure event object exists before accessing its properties\n      // Prevent the default behavior to allow dropping\n      event.preventDefault();\n    \n      // Optionally, add visual feedback for valid drop targets\n      if (event.dataTransfer) { // Ensure dataTransfer exists before accessing its properties\n        event.dataTransfer.dropEffect = 'move';\n      }\n    }\n  \n    // Determine the status of the dropped task\n    switch (task.status) {\n      case 'inProgress':\n        // Move the task to the 'InProgress' list\n        setInProgressTasks(prevTasks => [...prevTasks, task]);\n        break;\n      case 'delayed':\n        // Move the task to the 'Delayed' list\n        setDelayedTasks(prevTasks => [...prevTasks, task]);\n        break;\n      default:\n        // If the task status is 'toDo', update the 'ToDo' list\n        setToDoTasks(prevTasks => {\n          const updatedTasks = [...prevTasks];\n          // Check if the task already exists in the 'ToDo' list\n          const existingIndex = updatedTasks.findIndex(item => item.id === task.id);\n          if (existingIndex !== -1) {\n            updatedTasks.splice(existingIndex, 1); // Remove the existing task\n          }\n          // Insert the task at the specified index\n          updatedTasks.splice(index, 0, task);\n          return updatedTasks;\n        });\n        break;\n    }\n\n  \n  \n  \n\n    setToDoTasks(prevTasks => {\n      const updatedTasks = [...prevTasks];\n      const existingIndex = updatedTasks.findIndex(item => item.id === task.id);\n      if (existingIndex !== -1) {\n        updatedTasks.splice(existingIndex, 1);\n      }\n      updatedTasks.splice(index, 0, task);\n      return updatedTasks;\n    });\n  };\n\n  const handleInProgressDrop = (index, task) => {\n    setToDoTasks(prevTasks => prevTasks.filter((_, i) => i !== index));\n    setDelayedTasks(prevTasks => prevTasks.filter((_, i) => i !== index));\n    setInProgressTasks(prevTasks => [...prevTasks, task]);\n  };\n\n  const handleDelayedDrop = (index, task) => {\n    setToDoTasks(prevTasks => prevTasks.filter((_, i) => i !== index));\n    setInProgressTasks(prevTasks => prevTasks.filter((_, i) => i !== index));\n    setDelayedTasks(prevTasks => [...prevTasks, task]);\n  };\n\n  useEffect(() => {\n    setInProgressTasks([]);\n    setDelayedTasks([]);\n  }, [toDoTasks]); // Dependency added\n\n  return (\n    <div className=\"dashboard\">\n      <aside className=\"sidebar\">\n        <h2>Upcoming Events</h2>\n        <EventCard />\n      </aside>\n      <div className=\"separator\"></div>\n      <div className=\"column\">\n        <div className=\"column-section\">\n          <h2>ToDo</h2>\n          <TaskList tasks={toDoTasks} onDrop={handleToDoDrop} />\n        </div>\n\n        <div className=\"column-section\">\n          <h2>InProgress</h2>\n          <InProgressTaskList tasks={inProgressTasks} onDrop={handleInProgressDrop} />\n        </div>\n\n        <div className=\"column-section\">\n          <h2>Delayed</h2>\n          <DelayedTaskList tasks={delayedTasks} onDrop={handleDelayedDrop} />\n        </div>\n      </div>\n      <main className=\"main-content\">\n        <h1>Main Content</h1>\n        <p>This is the main content area of the dashboard.</p>\n      </main>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
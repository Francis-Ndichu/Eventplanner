{"ast":null,"code":"var _jsxFileName = \"/home/francis/EventPlanner/client/src/Components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport Task from './Task';\nimport TaskContext from './TaskContext';\nimport { useAuth } from './AuthContext';\nimport { useDrop } from 'react-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList() {\n  _s();\n  const {\n    tasks,\n    setTasks\n  } = useContext(TaskContext);\n  const {\n    user\n  } = useAuth();\n  const [draggedTaskId, setDraggedTaskId] = useState(null);\n  const userTasks = tasks.filter(task => task.assigned_users.some(assignedUser => assignedUser.id === user.id));\n  const handleDrop = (draggedId, targetIndex) => {\n    const updatedTasks = [...userTasks];\n    const draggedTask = updatedTasks.find(task => task.id === draggedId);\n    updatedTasks.splice(updatedTasks.indexOf(draggedTask), 1);\n    updatedTasks.splice(targetIndex, 0, draggedTask);\n    setTasks(updatedTasks);\n  };\n  const [{\n    isOver\n  }, drop] = useDrop({\n    accept: 'TASK',\n    drop: (item, monitor) => {\n      const draggedId = item.id;\n      const targetIndex = item.targetIndex;\n      handleDrop(draggedId, targetIndex);\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    style: {\n      background: isOver ? 'lightblue' : 'white'\n    },\n    children: userTasks.map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n      index: index,\n      task: task,\n      sourceSection: task.section,\n      isAdmin: user.role === 'admin',\n      setDraggedTaskId: setDraggedTaskId,\n      handleDrop: handleDrop,\n      draggedTaskId: draggedTaskId\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"XpdOIm0LuFGt/KDlkORzJDmZcDc=\", false, function () {\n  return [useAuth, useDrop];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useContext","useState","Task","TaskContext","useAuth","useDrop","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","user","draggedTaskId","setDraggedTaskId","userTasks","filter","task","assigned_users","some","assignedUser","id","handleDrop","draggedId","targetIndex","updatedTasks","draggedTask","find","splice","indexOf","isOver","drop","accept","item","monitor","collect","ref","style","background","children","map","index","sourceSection","section","isAdmin","role","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/francis/EventPlanner/client/src/Components/TaskList.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport Task from './Task';\nimport TaskContext from './TaskContext';\nimport { useAuth } from './AuthContext';\nimport { useDrop } from 'react-dnd';\n\nfunction TaskList() {\n  const { tasks, setTasks } = useContext(TaskContext);\n  const { user } = useAuth();\n  const [draggedTaskId, setDraggedTaskId] = useState(null);\n\n  const userTasks = tasks.filter(task => task.assigned_users.some(assignedUser => assignedUser.id === user.id));\n\n  const handleDrop = (draggedId, targetIndex) => {\n    const updatedTasks = [...userTasks];\n    const draggedTask = updatedTasks.find(task => task.id === draggedId);\n    updatedTasks.splice(updatedTasks.indexOf(draggedTask), 1);\n    updatedTasks.splice(targetIndex, 0, draggedTask);\n    setTasks(updatedTasks);\n  };\n\n  const [{ isOver }, drop] = useDrop({\n    accept: 'TASK',\n    drop: (item, monitor) => {\n      const draggedId = item.id;\n      const targetIndex = item.targetIndex;\n      handleDrop(draggedId, targetIndex);\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver(),\n    }),\n  });\n\n  return (\n    <div ref={drop} style={{ background: isOver ? 'lightblue' : 'white' }}>\n      {userTasks.map((task, index) => (\n        <Task\n          key={task.id}\n          index={index}\n          task={task}\n          sourceSection={task.section}\n          isAdmin={user.role === 'admin'}\n          setDraggedTaskId={setDraggedTaskId}\n          handleDrop={handleDrop}\n          draggedTaskId={draggedTaskId}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default TaskList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,OAAO,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGX,UAAU,CAACG,WAAW,CAAC;EACnD,MAAM;IAAES;EAAK,CAAC,GAAGR,OAAO,CAAC,CAAC;EAC1B,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMc,SAAS,GAAGL,KAAK,CAACM,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,cAAc,CAACC,IAAI,CAACC,YAAY,IAAIA,YAAY,CAACC,EAAE,KAAKT,IAAI,CAACS,EAAE,CAAC,CAAC;EAE7G,MAAMC,UAAU,GAAGA,CAACC,SAAS,EAAEC,WAAW,KAAK;IAC7C,MAAMC,YAAY,GAAG,CAAC,GAAGV,SAAS,CAAC;IACnC,MAAMW,WAAW,GAAGD,YAAY,CAACE,IAAI,CAACV,IAAI,IAAIA,IAAI,CAACI,EAAE,KAAKE,SAAS,CAAC;IACpEE,YAAY,CAACG,MAAM,CAACH,YAAY,CAACI,OAAO,CAACH,WAAW,CAAC,EAAE,CAAC,CAAC;IACzDD,YAAY,CAACG,MAAM,CAACJ,WAAW,EAAE,CAAC,EAAEE,WAAW,CAAC;IAChDf,QAAQ,CAACc,YAAY,CAAC;EACxB,CAAC;EAED,MAAM,CAAC;IAAEK;EAAO,CAAC,EAAEC,IAAI,CAAC,GAAG1B,OAAO,CAAC;IACjC2B,MAAM,EAAE,MAAM;IACdD,IAAI,EAAEA,CAACE,IAAI,EAAEC,OAAO,KAAK;MACvB,MAAMX,SAAS,GAAGU,IAAI,CAACZ,EAAE;MACzB,MAAMG,WAAW,GAAGS,IAAI,CAACT,WAAW;MACpCF,UAAU,CAACC,SAAS,EAAEC,WAAW,CAAC;IACpC,CAAC;IACDW,OAAO,EAAED,OAAO,KAAK;MACnBJ,MAAM,EAAE,CAAC,CAACI,OAAO,CAACJ,MAAM,CAAC;IAC3B,CAAC;EACH,CAAC,CAAC;EAEF,oBACEvB,OAAA;IAAK6B,GAAG,EAAEL,IAAK;IAACM,KAAK,EAAE;MAAEC,UAAU,EAAER,MAAM,GAAG,WAAW,GAAG;IAAQ,CAAE;IAAAS,QAAA,EACnExB,SAAS,CAACyB,GAAG,CAAC,CAACvB,IAAI,EAAEwB,KAAK,kBACzBlC,OAAA,CAACL,IAAI;MAEHuC,KAAK,EAAEA,KAAM;MACbxB,IAAI,EAAEA,IAAK;MACXyB,aAAa,EAAEzB,IAAI,CAAC0B,OAAQ;MAC5BC,OAAO,EAAEhC,IAAI,CAACiC,IAAI,KAAK,OAAQ;MAC/B/B,gBAAgB,EAAEA,gBAAiB;MACnCQ,UAAU,EAAEA,UAAW;MACvBT,aAAa,EAAEA;IAAc,GAPxBI,IAAI,CAACI,EAAE;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQb,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACxC,EAAA,CA3CQD,QAAQ;EAAA,QAEEJ,OAAO,EAaGC,OAAO;AAAA;AAAA6C,EAAA,GAf3B1C,QAAQ;AA6CjB,eAAeA,QAAQ;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
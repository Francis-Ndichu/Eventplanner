{"ast":null,"code":"var _jsxFileName = \"/home/francis/EventPlanner/client/src/Components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport Task from './Task';\nimport TaskContext from './TaskContext';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList({\n  onDrop\n}) {\n  _s();\n  const {\n    tasks,\n    updateTaskList\n  } = useContext(TaskContext); // Access tasks and setTasks from TaskContext\n  const {\n    user\n  } = useAuth();\n  const handleDrop = e => {\n    e.preventDefault();\n    const droppedTask = JSON.parse(e.dataTransfer.getData('task'));\n    onDrop(droppedTask);\n  };\n  const allowDrop = e => {\n    e.preventDefault();\n  };\n  const moveTask = (dragIndex, hoverIndex) => {\n    // Create a copy of the tasks array to avoid mutating state directly\n    const updatedTasks = [...tasks];\n    // Remove the task from its original position\n    const [draggedTask] = updatedTasks.splice(dragIndex, 1);\n    // Insert the task into its new position\n    updatedTasks.splice(hoverIndex, 0, draggedTask);\n    // Update the tasks array in state\n    updateTaskList(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onDrop: handleDrop,\n    onDragOver: allowDrop,\n    children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n      index: index,\n      task: task,\n      moveTask: moveTask,\n      isAdmin: user.role === 'admin'\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"g/lHI2i7msQASoVespt7EhkI2dM=\", false, function () {\n  return [useAuth];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useContext","Task","TaskContext","useAuth","jsxDEV","_jsxDEV","TaskList","onDrop","_s","tasks","updateTaskList","user","handleDrop","e","preventDefault","droppedTask","JSON","parse","dataTransfer","getData","allowDrop","moveTask","dragIndex","hoverIndex","updatedTasks","draggedTask","splice","onDragOver","children","map","task","index","isAdmin","role","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/francis/EventPlanner/client/src/Components/TaskList.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport Task from './Task';\nimport TaskContext from './TaskContext';\nimport { useAuth } from './AuthContext';\n\nfunction TaskList({ onDrop }) {\n  const { tasks, updateTaskList } = useContext(TaskContext); // Access tasks and setTasks from TaskContext\n  const { user } = useAuth();\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n    const droppedTask = JSON.parse(e.dataTransfer.getData('task'));\n    onDrop(droppedTask);\n  };\n\n  const allowDrop = (e) => {\n    e.preventDefault();\n  };\n\n  const moveTask = (dragIndex, hoverIndex) => {\n    // Create a copy of the tasks array to avoid mutating state directly\n    const updatedTasks = [...tasks];\n    // Remove the task from its original position\n    const [draggedTask] = updatedTasks.splice(dragIndex, 1);\n    // Insert the task into its new position\n    updatedTasks.splice(hoverIndex, 0, draggedTask);\n    // Update the tasks array in state\n    updateTaskList(updatedTasks);\n  };\n\n  return (\n    <div onDrop={handleDrop} onDragOver={allowDrop}>\n      {tasks.map((task, index) => (\n        <Task key={task.id} index={index} task={task} moveTask={moveTask} isAdmin={user.role === 'admin'} />\n      ))}\n    </div>\n  );\n}\n\nexport default TaskList;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC5B,MAAM;IAAEC,KAAK;IAAEC;EAAe,CAAC,GAAGV,UAAU,CAACE,WAAW,CAAC,CAAC,CAAC;EAC3D,MAAM;IAAES;EAAK,CAAC,GAAGR,OAAO,CAAC,CAAC;EAE1B,MAAMS,UAAU,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACJ,CAAC,CAACK,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC9DZ,MAAM,CAACQ,WAAW,CAAC;EACrB,CAAC;EAED,MAAMK,SAAS,GAAIP,CAAC,IAAK;IACvBA,CAAC,CAACC,cAAc,CAAC,CAAC;EACpB,CAAC;EAED,MAAMO,QAAQ,GAAGA,CAACC,SAAS,EAAEC,UAAU,KAAK;IAC1C;IACA,MAAMC,YAAY,GAAG,CAAC,GAAGf,KAAK,CAAC;IAC/B;IACA,MAAM,CAACgB,WAAW,CAAC,GAAGD,YAAY,CAACE,MAAM,CAACJ,SAAS,EAAE,CAAC,CAAC;IACvD;IACAE,YAAY,CAACE,MAAM,CAACH,UAAU,EAAE,CAAC,EAAEE,WAAW,CAAC;IAC/C;IACAf,cAAc,CAACc,YAAY,CAAC;EAC9B,CAAC;EAED,oBACEnB,OAAA;IAAKE,MAAM,EAAEK,UAAW;IAACe,UAAU,EAAEP,SAAU;IAAAQ,QAAA,EAC5CnB,KAAK,CAACoB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrB1B,OAAA,CAACJ,IAAI;MAAe8B,KAAK,EAAEA,KAAM;MAACD,IAAI,EAAEA,IAAK;MAACT,QAAQ,EAAEA,QAAS;MAACW,OAAO,EAAErB,IAAI,CAACsB,IAAI,KAAK;IAAQ,GAAtFH,IAAI,CAACI,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiF,CACpG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC9B,EAAA,CAhCQF,QAAQ;EAAA,QAEEH,OAAO;AAAA;AAAAoC,EAAA,GAFjBjC,QAAQ;AAkCjB,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
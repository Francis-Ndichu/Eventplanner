{"ast":null,"code":"var _jsxFileName = \"/home/francis/EventPlanner/client/src/Components/Dashboard.js\",\n  _s = $RefreshSig$();\n// Dashboard.js\n\nimport React, { useState } from 'react';\nimport '../index.css'; // Assuming you have a separate CSS file for styles\nimport EventCard from './EventCard';\nimport TaskList from './TaskList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [toDoTasks, setToDoTasks] = useState([]);\n  const [inProgressTasks, setInProgressTasks] = useState([]);\n  const [delayedTasks, setDelayedTasks] = useState([]);\n  const handleDrop = (status, index, task) => {\n    if (status === 'toDo') {\n      if (task.status === 'inProgress') {\n        setInProgressTasks(prevTasks => [...prevTasks, task]);\n        setToDoTasks(prevTasks => prevTasks.filter(t => t.id !== task.id));\n      } else if (task.status === 'delayed') {\n        setDelayedTasks(prevTasks => [...prevTasks, task]);\n        setToDoTasks(prevTasks => prevTasks.filter(t => t.id !== task.id));\n      } else {\n        setToDoTasks(prevTasks => {\n          const updatedTasks = [...prevTasks];\n          updatedTasks.splice(task.index, 1); // Remove task from previous position\n          updatedTasks.splice(index, 0, task); // Insert task at new position\n          return updatedTasks;\n        });\n      }\n    } else if (status === 'inProgress') {\n      // Implement similar logic for 'inProgress' status\n    } else if (status === 'delayed') {\n      // Implement similar logic for 'delayed' status\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upcoming Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EventCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"separator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"ToDo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n          tasks: toDoTasks,\n          onDrop: (index, task) => handleDrop('toDo', index, task)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"InProgress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n          tasks: inProgressTasks,\n          onDrop: (index, task) => handleDrop('inProgress', index, task)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Delayed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n          tasks: delayedTasks,\n          onDrop: (index, task) => handleDrop('delayed', index, task)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Main Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is the main content area of the dashboard.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"EuB5dIXvJ5Hgnktq3zf3YeMdJhs=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","EventCard","TaskList","jsxDEV","_jsxDEV","Dashboard","_s","toDoTasks","setToDoTasks","inProgressTasks","setInProgressTasks","delayedTasks","setDelayedTasks","handleDrop","status","index","task","prevTasks","filter","t","id","updatedTasks","splice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","tasks","onDrop","_c","$RefreshReg$"],"sources":["/home/francis/EventPlanner/client/src/Components/Dashboard.js"],"sourcesContent":["// Dashboard.js\n\nimport React, { useState } from 'react';\nimport '../index.css'; // Assuming you have a separate CSS file for styles\nimport EventCard from './EventCard';\nimport TaskList from './TaskList';\n\nfunction Dashboard() {\n  const [toDoTasks, setToDoTasks] = useState([]);\n  const [inProgressTasks, setInProgressTasks] = useState([]);\n  const [delayedTasks, setDelayedTasks] = useState([]);\n\n  const handleDrop = (status, index, task) => {\n    if (status === 'toDo') {\n      if (task.status === 'inProgress') {\n        setInProgressTasks((prevTasks) => [...prevTasks, task]);\n        setToDoTasks((prevTasks) => prevTasks.filter((t) => t.id !== task.id));\n      } else if (task.status === 'delayed') {\n        setDelayedTasks((prevTasks) => [...prevTasks, task]);\n        setToDoTasks((prevTasks) => prevTasks.filter((t) => t.id !== task.id));\n      } else {\n        setToDoTasks((prevTasks) => {\n          const updatedTasks = [...prevTasks];\n          updatedTasks.splice(task.index, 1); // Remove task from previous position\n          updatedTasks.splice(index, 0, task); // Insert task at new position\n          return updatedTasks;\n        });\n      }\n    } else if (status === 'inProgress') {\n      // Implement similar logic for 'inProgress' status\n    } else if (status === 'delayed') {\n      // Implement similar logic for 'delayed' status\n    }\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <aside className=\"sidebar\">\n        <h2>Upcoming Events</h2>\n        <EventCard />\n      </aside>\n      <div className=\"separator\"></div>\n      <div className=\"column\">\n        <div className=\"column-section\">\n          <h2>ToDo</h2>\n          <TaskList tasks={toDoTasks} onDrop={(index, task) => handleDrop('toDo', index, task)} />\n        </div>\n\n        <div className=\"column-section\">\n          <h2>InProgress</h2>\n          <TaskList tasks={inProgressTasks} onDrop={(index, task) => handleDrop('inProgress', index, task)} />\n        </div>\n\n        <div className=\"column-section\">\n          <h2>Delayed</h2>\n          <TaskList tasks={delayedTasks} onDrop={(index, task) => handleDrop('delayed', index, task)} />\n        </div>\n      </div>\n      <main className=\"main-content\">\n        <h1>Main Content</h1>\n        <p>This is the main content area of the dashboard.</p>\n      </main>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/francis/EventPlanner/client/src/Components/TaskList.js\",\n  _s = $RefreshSig$();\n// In TaskList.js\nimport React, { useContext } from 'react';\nimport Task from './Task';\nimport TaskContext from './TaskContext';\nimport { useAuth } from './AuthContext';\nimport { useDrop } from 'react-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList() {\n  _s();\n  const {\n    tasks\n  } = useContext(TaskContext);\n  const {\n    user\n  } = useAuth();\n  const userTasks = tasks.filter(task => task.assigned_users.some(assignedUser => assignedUser.id === user.id));\n  const [{\n    isOver\n  }, drop] = useDrop({\n    accept: 'TASK',\n    drop: (item, monitor) => {\n      const draggedIndex = item.index;\n      const targetIndex = index; // Assuming index is defined in the map function\n\n      // Handle the drop by updating the position of the dropped item\n      if (draggedIndex !== targetIndex) {\n        // Perform the necessary state update to reorder the tasks\n        // Example: reorderTasks(draggedIndex, targetIndex);\n      }\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    style: {\n      background: isOver ? 'lightblue' : 'white'\n    },\n    children: userTasks.map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n      index: index,\n      task: task,\n      sourceSection: task.section // Ensure sourceSection is correctly passed\n      ,\n      isAdmin: user.role === 'admin'\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 8\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"6NUlNxpfRG1OiTXR9NY/swkbYQU=\", false, function () {\n  return [useAuth, useDrop];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useContext","Task","TaskContext","useAuth","useDrop","jsxDEV","_jsxDEV","TaskList","_s","tasks","user","userTasks","filter","task","assigned_users","some","assignedUser","id","isOver","drop","accept","item","monitor","draggedIndex","index","targetIndex","collect","ref","style","background","children","map","sourceSection","section","isAdmin","role","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/francis/EventPlanner/client/src/Components/TaskList.js"],"sourcesContent":["// In TaskList.js\nimport React, { useContext } from 'react';\nimport Task from './Task';\nimport TaskContext from './TaskContext';\nimport { useAuth } from './AuthContext';\nimport { useDrop } from 'react-dnd';\n\nfunction TaskList() {\n  const { tasks } = useContext(TaskContext);\n  const { user } = useAuth();\n\n  const userTasks = tasks.filter(task => task.assigned_users.some(assignedUser => assignedUser.id === user.id));\n  const [{ isOver }, drop] = useDrop({\n    accept: 'TASK',\n    drop: (item, monitor) => {\n      const draggedIndex = item.index;\n      const targetIndex = index; // Assuming index is defined in the map function\n\n      // Handle the drop by updating the position of the dropped item\n      if (draggedIndex !== targetIndex) {\n        // Perform the necessary state update to reorder the tasks\n        // Example: reorderTasks(draggedIndex, targetIndex);\n      }\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver(),\n    }),\n  });\n\n\n\n  return (\n    <div ref={drop} style={{ background: isOver ? 'lightblue' : 'white' }}>\n      {userTasks.map((task, index) => (\n       <Task\n          key={task.id}\n          index={index}\n          task={task}\n          sourceSection={task.section} // Ensure sourceSection is correctly passed\n          isAdmin={user.role === 'admin'}\n        />\n     \n      ))}\n    </div>\n  );\n}\n\nexport default TaskList;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,OAAO,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM;IAAEC;EAAM,CAAC,GAAGT,UAAU,CAACE,WAAW,CAAC;EACzC,MAAM;IAAEQ;EAAK,CAAC,GAAGP,OAAO,CAAC,CAAC;EAE1B,MAAMQ,SAAS,GAAGF,KAAK,CAACG,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,cAAc,CAACC,IAAI,CAACC,YAAY,IAAIA,YAAY,CAACC,EAAE,KAAKP,IAAI,CAACO,EAAE,CAAC,CAAC;EAC7G,MAAM,CAAC;IAAEC;EAAO,CAAC,EAAEC,IAAI,CAAC,GAAGf,OAAO,CAAC;IACjCgB,MAAM,EAAE,MAAM;IACdD,IAAI,EAAEA,CAACE,IAAI,EAAEC,OAAO,KAAK;MACvB,MAAMC,YAAY,GAAGF,IAAI,CAACG,KAAK;MAC/B,MAAMC,WAAW,GAAGD,KAAK,CAAC,CAAC;;MAE3B;MACA,IAAID,YAAY,KAAKE,WAAW,EAAE;QAChC;QACA;MAAA;IAEJ,CAAC;IACDC,OAAO,EAAEJ,OAAO,KAAK;MACnBJ,MAAM,EAAE,CAAC,CAACI,OAAO,CAACJ,MAAM,CAAC;IAC3B,CAAC;EACH,CAAC,CAAC;EAIF,oBACEZ,OAAA;IAAKqB,GAAG,EAAER,IAAK;IAACS,KAAK,EAAE;MAAEC,UAAU,EAAEX,MAAM,GAAG,WAAW,GAAG;IAAQ,CAAE;IAAAY,QAAA,EACnEnB,SAAS,CAACoB,GAAG,CAAC,CAAClB,IAAI,EAAEW,KAAK,kBAC1BlB,OAAA,CAACL,IAAI;MAEFuB,KAAK,EAAEA,KAAM;MACbX,IAAI,EAAEA,IAAK;MACXmB,aAAa,EAAEnB,IAAI,CAACoB,OAAQ,CAAC;MAAA;MAC7BC,OAAO,EAAExB,IAAI,CAACyB,IAAI,KAAK;IAAQ,GAJ1BtB,IAAI,CAACI,EAAE;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKb,CAEF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC/B,EAAA,CAtCQD,QAAQ;EAAA,QAEEJ,OAAO,EAGGC,OAAO;AAAA;AAAAoC,EAAA,GAL3BjC,QAAQ;AAwCjB,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
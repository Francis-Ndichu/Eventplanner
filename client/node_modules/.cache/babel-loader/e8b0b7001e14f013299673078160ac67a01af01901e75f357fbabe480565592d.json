{"ast":null,"code":"var _jsxFileName = \"/home/francis/EventPlanner/client/src/Components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport EventCard from './EventCard';\nimport TaskList from './TaskList';\nimport { v4 as uuidv4 } from 'uuid'; // Import uuid\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [columns, setColumns] = useState({\n    todo: {\n      title: 'ToDo',\n      items: [{\n        id: 'task1',\n        title: 'Task 1'\n      }, {\n        id: 'task2',\n        title: 'Task 2'\n      }, {\n        id: 'task3',\n        title: 'Task 3'\n      }]\n    },\n    inProgress: {\n      id: 'inProgress',\n      // Static key for InProgress column\n      title: 'InProgress',\n      items: []\n    },\n    completed: {\n      id: 'completed',\n      // Static key for Completed column\n      title: 'Completed',\n      items: []\n    },\n    delayed: {\n      id: 'delayed',\n      // Static key for Delayed column\n      title: 'Delayed',\n      items: []\n    }\n  });\n  const [renderedTasks, setRenderedTasks] = useState({});\n  const onDragEnd = result => {\n    const {\n      destination,\n      source,\n      draggableId\n    } = result;\n    if (source.droppableId !== destination.droppableId) {\n      const sourceColumn = columns[source.droppableId];\n      const destColumn = columns[destination.droppableId];\n      const sourceItems = [...sourceColumn.items];\n      const destItems = [...destColumn.items];\n      const [remove] = sourceItems.splice(source.index, 1);\n      destItems.splice(destination.index, 0, remove);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: sourceItems\n        },\n        [destination.droppableId]: {\n          ...destColumn,\n          items: destItems\n        }\n      });\n    } else {\n      const column = columns[source.droppableId];\n      const copiedItems = [...column.items];\n      const [removed] = copiedItems.splice(source.index, 1);\n      copiedItems.splice(destination.index, 0, removed);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...column,\n          items: copiedItems\n        }\n      });\n    }\n  };\n  const renderTask = taskId => {\n    if (!renderedTasks[taskId]) {\n      setRenderedTasks({\n        ...renderedTasks,\n        [taskId]: true\n      });\n      return true;\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Upcoming Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EventCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"main-content\",\n          style: {\n            height: \"fit-content\",\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Main Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This is the main content area of the dashboard.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          children: Object.keys(columns).map(columnId => /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: `droppable-${columnId}`,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              style: {\n                backgroundColor: 'lightgrey',\n                flex: '1',\n                margin: '8px',\n                minHeight: '200px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"column\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"column-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: columns[columnId].title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 25\n                  }, this), columns[columnId].items.map((item, index) => renderTask(item.id) && /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: item.id,\n                    index: index,\n                    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      children: /*#__PURE__*/_jsxDEV(TaskList, {\n                        task: item\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 120,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 115,\n                      columnNumber: 31\n                    }, this)\n                  }, item.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 27\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this)\n          }, columnId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"HfVSU6E5FaKHnxBzgkCvdRUVjz8=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","EventCard","TaskList","v4","uuidv4","jsxDEV","_jsxDEV","Dashboard","_s","columns","setColumns","todo","title","items","id","inProgress","completed","delayed","renderedTasks","setRenderedTasks","onDragEnd","result","destination","source","draggableId","droppableId","sourceColumn","destColumn","sourceItems","destItems","remove","splice","index","column","copiedItems","removed","renderTask","taskId","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","height","width","display","Object","keys","map","columnId","provided","ref","innerRef","droppableProps","backgroundColor","flex","margin","minHeight","item","draggableProps","dragHandleProps","task","placeholder","_c","$RefreshReg$"],"sources":["/home/francis/EventPlanner/client/src/Components/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport EventCard from './EventCard';\nimport TaskList from './TaskList';\nimport { v4 as uuidv4 } from 'uuid'; // Import uuid\n\nconst Dashboard = () => {\n  const [columns, setColumns] = useState({\n    todo: {\n      title: 'ToDo',\n      items: [\n        { id: 'task1', title: 'Task 1' },\n        { id: 'task2', title: 'Task 2' },\n        { id: 'task3', title: 'Task 3' }\n      ]\n    },\n    inProgress: {\n      id: 'inProgress', // Static key for InProgress column\n      title: 'InProgress',\n      items: []\n    },\n    completed: {\n      id: 'completed', // Static key for Completed column\n      title: 'Completed',\n      items: []\n    },\n    delayed: {\n      id: 'delayed', // Static key for Delayed column\n      title: 'Delayed',\n      items: []\n    }\n  });\n\n  const [renderedTasks, setRenderedTasks] = useState({});\n  const onDragEnd = result => {\n    const { destination, source, draggableId } = result;\n    if (source.droppableId !== destination.droppableId) {\n      const sourceColumn = columns[source.droppableId];\n      const destColumn = columns[destination.droppableId];\n      const sourceItems = [...sourceColumn.items];\n      const destItems = [...destColumn.items];\n      const [remove] = sourceItems.splice(source.index, 1);\n      destItems.splice(destination.index, 0, remove);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: sourceItems\n        },\n        [destination.droppableId]: {\n          ...destColumn,\n          items: destItems\n        }\n      });\n    } else {\n      const column = columns[source.droppableId];\n      const copiedItems = [...column.items];\n      const [removed] = copiedItems.splice(source.index, 1);\n      copiedItems.splice(destination.index, 0, removed);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...column,\n          items: copiedItems\n        }\n      });\n    }\n  };\n  \n\n  const renderTask = (taskId) => {\n    if (!renderedTasks[taskId]) {\n      setRenderedTasks({\n        ...renderedTasks,\n        [taskId]: true\n      });\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"dashboard\">\n        <aside className=\"sidebar\">\n          <h2>Upcoming Events</h2>\n          <EventCard />\n        </aside>\n        <div className=\"main-section\">\n          <main className=\"main-content\" style={{ height: \"fit-content\", width: \"100%\" }}>\n            <h1>Main Content</h1>\n            <p>This is the main content area of the dashboard.</p>\n          </main>\n          <div style={{ display: 'flex' }}>\n            {Object.keys(columns).map(columnId => (\n              <Droppable droppableId={`droppable-${columnId}`} key={columnId}>\n                {(provided) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                    style={{\n                      backgroundColor: 'lightgrey',\n                      flex: '1',\n                      margin: '8px',\n                      minHeight: '200px'\n                    }}\n                  >\n                    <div className=\"column\">\n                      <div className=\"column-section\">\n                        <h2>{columns[columnId].title}</h2>\n                        {columns[columnId].items.map((item, index) => (\n                          renderTask(item.id) &&\n                          <Draggable key={item.id} draggableId={item.id} index={index}>\n                            {(provided) => (\n                              <div\n                                ref={provided.innerRef}\n                                {...provided.draggableProps}\n                                {...provided.dragHandleProps}\n                              >\n                                <TaskList task={item} />\n                              </div>\n                            )}\n                          </Draggable>\n                        ))}\n\n                        {provided.placeholder}\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </Droppable>\n            ))}\n          </div>\n        </div>\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}